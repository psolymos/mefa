[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Solymos. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Peter Solymos (2009). Processing Ecological Data R mefa Package. Journal Statistical Software 29(8), 1-28. URL https://doi.org/10.18637/jss.v029.i08","code":"@Article{,   title = {Processing Ecological Data in {R} with the {mefa} Package},   author = {P\\'eter S\\'olymos},   journal = {Journal of Statistical Software},   year = {2009},   volume = {29},   number = {8},   pages = {1--28},   url = {https://doi.org/10.18637/jss.v029.i08}, }"},{"path":"/index.html","id":"mefa-multivariate-data-handling-in-ecology-and-biogeography","dir":"","previous_headings":"","what":"Multivariate Data Handling in Ecology and Biogeography","title":"Multivariate Data Handling in Ecology and Biogeography","text":"imported version mefa R package mefa project R-Forge (rev 619). Mefa framework package aimed provide standardized computational environment specialist work via object classes represent data coded samples, taxa segments (.e. subpopulations, repeated measures). supports easy processing data along cross tabulation relational data tables samples taxa. object class mefa project specific compendium data can easily used analyses. Methods provided extraction, aggregation, conversion, plotting, summary reporting `mefa’ objects. Reports can generated plain text LaTeX format. Vignette contains worked examples.","code":""},{"path":"/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"Multivariate Data Handling in Ecology and Biogeography","text":"Install CRAN version : Install development version GitHub:","code":"install.packages(\"mefa\") remotes::install_github(\"psolymos/mefa\")"},{"path":"/index.html","id":"report-a-problem","dir":"","previous_headings":"","what":"Report a problem","title":"Multivariate Data Handling in Ecology and Biogeography","text":"Use issue tracker report problem.","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Multivariate Data Handling in Ecology and Biogeography","text":"Solymos P. 2008. mefa: R package handling reporting count data. Community Ecology 9, 125-127. (PDF) Solymos P. 2009. Processing ecological data R mefa package. Journal Statistical Software 29(8), 1-28. DOI: 10.18637/jss.v029.i08","code":""},{"path":"/reference/aggregate.mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"methods useful extracting aggregating 'mefa' objects. count data matrix, matrices segments linked tables samples taxa extracted aggregated time.","code":""},{"path":"/reference/aggregate.mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"","code":"# S3 method for mefa aggregate(x, by.samp = NULL, by.taxa = NULL, ...) # S3 method for mefa [(x, i = 1:dim(x)[1], j = 1:dim(x)[2], k = 1:dim(x)[3], drop = FALSE) xtab(x, ...) samp(x, ...) taxa(x, ...) segm(x, ...)"},{"path":"/reference/aggregate.mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"x object class 'mefa'. .samp vector length number samples one unique values use aggregating samples. .taxa vector length number taxa one unique values use aggregating taxa. , j, k index value vector indices samples, taxa segments, respectively. Can numeric character. Negative numeric values indicate items excluded. drop logical, TRUE unused factor leves linked tables samples species dropped extraction. FALSE (default) unused factor levels left intact. ... arguments passed generic function.","code":""},{"path":"/reference/aggregate.mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"'mefa' object aggregated, either tables samples taxa (depending aggregation made rows, columns ) set NULL. aggregation straightforward data frames mixed type data (e.g. factors, character vectors), applied function (mean, sum, etc.) depends type numeric variables. Consequently, new data table needed, must defined function mefa. original data frame contained numeric columns, can easily aggregated function apply known. factors numeric columns, however, aggregation defined. ordering dimensions follow ordering indices extraction call, except nested subsets, sequence nested segments allowed affected extraction (error message given). extracting method retains samples taxa tables well. non-nested segments extracted, x$xtab matrix contain sum segments, original values x$xtab. Thus resulting 'mefa' object one segment, identical x$xtab matrix. nested segments extracted, x$xtab identical last segment sum segments. See examples differences. original object nested segments first excluded, segment names change result. one segment remains result, nested attribute turned . aggregation done vector part tables inside 'mefa' object, must class attribute recognised, use e.g. .factor function (see 'Examples'). resulting 'mefa' object must contain least 2 samples 2 taxa. Extractor functions xtab, samp, taxa, segm extract corresponding element 'mefa' object.","code":""},{"path":"/reference/aggregate.mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"object class 'mefa'.","code":""},{"path":"/reference/aggregate.mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/aggregate.mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/aggregate.mefa.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"aggregate method replaces function strify, [ method replaces function exclmf old (< 2.0) versions mefa package.","code":""},{"path":[]},{"path":"/reference/aggregate.mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract and Aggregate Objects of Class 'mefa' — aggregate.mefa","text":"","code":"data(dol.count, dol.samp, dol.taxa) x <- mefa(stcs(dol.count), dol.samp, dol.taxa) ## These two are identical aggregate(x, \"microhab\") #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 4 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa provided (4 variables). #>  aggregate(x, x$samp$microhab, inside = FALSE) #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 4 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa provided (4 variables). #>  ## Interaction aggregate(x, c(\"method\", \"microhab\")) #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 8 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa provided (4 variables). #>  ## Both samples and taxa tables aggregate(x, \"microhab\", \"familia\") #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 9 taxa in 4 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>  ## To use a factor aggregate(x, \"microhab\", as.factor(rbinom(dim(x)[2], 1, 0.5))) #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 2 taxa in 4 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>  ## Extraction x[1:10, ] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 236 individuals of 28 taxa in 10 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  x[, 1:5] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 126 individuals of 5 taxa in 24 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  x[, , \"broken\"] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 338 individuals of 28 taxa in 24 samples, #>  $ segm: 1 (non-nested) segments: #>          broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  x[1:10, 1:5] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 33 individuals of 5 taxa in 10 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  x[1:10, 1:5, 2] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 12 individuals of 5 taxa in 10 samples, #>  $ segm: 1 (non-nested) segments: #>          broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  ## Note factor levels y <- x[which(x$samp$method == \"time\"), ] levels(y$samp$method) #> [1] \"time\"    \"quadrat\" z <- x[which(x$samp$method == \"time\"), drop = TRUE] levels(z$samp$method) #> [1] \"time\" ## Note the differences in total sums y <- mefa(stcs(dol.count), dol.samp, dol.taxa, nested = TRUE) x[ , , 2] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 338 individuals of 28 taxa in 24 samples, #>  $ segm: 1 (non-nested) segments: #>          broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  y[ , , 2] #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 1 (non-nested) segments: #>          fresh-broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>"},{"path":"/reference/aoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Abundance-Occupancy Plot — aoplot","title":"Abundance-Occupancy Plot — aoplot","text":"Abundance-occupancy plot.","code":""},{"path":"/reference/aoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abundance-Occupancy Plot — aoplot","text":"","code":"aoplot(x, ...) # S3 method for default aoplot(x, log = TRUE, xlab, ylab, ...)"},{"path":"/reference/aoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abundance-Occupancy Plot — aoplot","text":"x object, possibly matrix. log Logical, abundance values log10 transformed. xlab, ylab Axis labels, can missing default labels. ... arguments passed plot function.","code":""},{"path":"/reference/aoplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abundance-Occupancy Plot — aoplot","text":"Column sums x (species abundances) plotted  column sums binarized x (species occupancy).","code":""},{"path":"/reference/aoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abundance-Occupancy Plot — aoplot","text":"Creates plot side effect. Invisibly returns abundance occurrence values matrix.","code":""},{"path":"/reference/aoplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abundance-Occupancy Plot — aoplot","text":"Peter Solymos <solymos@ualberta.ca>","code":""},{"path":"/reference/aoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abundance-Occupancy Plot — aoplot","text":"","code":"data(dol.count) x <- mefa(stcs(dol.count)) aoplot(x)"},{"path":"/reference/as.mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion Among Various Object Classes — as.mefa","title":"Conversion Among Various Object Classes — as.mefa","text":"functions coerce class 'mefa' 'stcs'; converts 'mefa' 'stcs' obects 'data.frame', 'matrix', 'array', 'list'.","code":""},{"path":"/reference/as.mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion Among Various Object Classes — as.mefa","text":"","code":"as.stcs(x, ...) # S3 method for default as.stcs(x, ...) as.mefa(x, ...) as.Mefa(x, ...) as.Xtab(x, ...) # S3 method for default as.mefa(x, samp, taxa, ...) # S3 method for array as.mefa(x, ...) # S3 method for list as.mefa(x, ...) # S3 method for mefa as.matrix(x, ...) # S3 method for mefa as.array(x, ...) # S3 method for mefa as.list(x, ...) # S3 method for stcs as.data.frame(x, ...) # S3 method for mefa as.data.frame(x, ..., fun, name, make.unique = FALSE) mss(x, name, make.unique = FALSE, ...) msr(x, name, make.unique = FALSE, ...) mts(x, name, make.unique = FALSE, ...) mtr(x, name, make.unique = FALSE, ...)"},{"path":"/reference/as.mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion Among Various Object Classes — as.mefa","text":"x object class 'mefa'. samp data frame containing rows samples, NULL. See argument xtab.fixed details sample matching options. taxa data frame containing rows taxa, NULL. See argument xtab.fixed details taxa matching options. fun function determine return, see details. default, choice trivial. name optional character vector, names return possible elements needed, see details. make.unique logical, useful use make.unique = TRUE names return non-unique, see details. ... arguments passed generic function .data.frame.","code":""},{"path":"/reference/as.mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion Among Various Object Classes — as.mefa","text":"usage coercion methods trivial. Arrays lists can coerced 'mefa' objects segm element (either nested, non nested). reverse true, coercing object class 'mefa' list array, segm element used. Coercing among object classes 'matrix' 'mefa' done via using xtab element. .data.frame.mefa, four kinds data frames can returned, depending function used fun argument: mss returns summary statistics samples (richness abundance) x$samp; msr returns raw data (x$xtab) x$samp; mts returns summary statistics taxa (occurrence abundance) x$taxa; mtr returns raw data (t(x$xtab)) x$taxa. name can used subset summary statistics, raw data returned. character vector contain names elements return (see examples). might (rarely) occur, names summary statistics, raw data column names sample/taxa table overlap (contains names common two set). case, make.unique = TRUE can used resolve non-uniqueness avoid error message produced otherwise. functions supplied fun argument can used separately. Although usage .data.frame method transparent.","code":""},{"path":"/reference/as.mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion Among Various Object Classes — as.mefa","text":"object class 'stcs', 'mefa', 'matrix', 'array', 'list' 'data.frame', depending method used.","code":""},{"path":"/reference/as.mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Conversion Among Various Object Classes — as.mefa","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/as.mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Conversion Among Various Object Classes — as.mefa","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/as.mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion Among Various Object Classes — as.mefa","text":"","code":"data(dol.count, dol.samp, dol.taxa) x <- mefa(stcs(dol.count), dol.samp, dol.taxa) ## These two are equivalent as.data.frame(x, fun = mss) #>     s.rich s.abu  microhab  method #> DQ1      5    18 dead.wood quadrat #> DQ2      7    39 dead.wood quadrat #> DQ3      4     9 dead.wood quadrat #> DT1      7    11 dead.wood    time #> DT2     10    13 dead.wood    time #> DT3      5    13 dead.wood    time #> LQ1      5    34    litter quadrat #> LQ2      5    17    litter quadrat #> LQ3      7    82    litter quadrat #> LT1      0     0    litter    time #> LT2      2     2    litter    time #> LT3      5    10    litter    time #> RQ1     10    23      rock quadrat #> RQ2     16    97      rock quadrat #> RQ3     13    63      rock quadrat #> RT1     11    44      rock    time #> RT2     15    47      rock    time #> RT3     10    30      rock    time #> WQ1      9    48 live.wood quadrat #> WQ2     10    90 live.wood quadrat #> WQ3      8    24 live.wood quadrat #> WT1      5     5 live.wood    time #> WT2      4     6 live.wood    time #> WT3      3     6 live.wood    time mss(x) #>     s.rich s.abu  microhab  method #> DQ1      5    18 dead.wood quadrat #> DQ2      7    39 dead.wood quadrat #> DQ3      4     9 dead.wood quadrat #> DT1      7    11 dead.wood    time #> DT2     10    13 dead.wood    time #> DT3      5    13 dead.wood    time #> LQ1      5    34    litter quadrat #> LQ2      5    17    litter quadrat #> LQ3      7    82    litter quadrat #> LT1      0     0    litter    time #> LT2      2     2    litter    time #> LT3      5    10    litter    time #> RQ1     10    23      rock quadrat #> RQ2     16    97      rock quadrat #> RQ3     13    63      rock quadrat #> RT1     11    44      rock    time #> RT2     15    47      rock    time #> RT3     10    30      rock    time #> WQ1      9    48 live.wood quadrat #> WQ2     10    90 live.wood quadrat #> WQ3      8    24 live.wood quadrat #> WT1      5     5 live.wood    time #> WT2      4     6 live.wood    time #> WT3      3     6 live.wood    time ## Return only two species as.data.frame(x, fun = msr, c(\"iiso\", \"ppyg\")) #>     aacu amin apur bbip bcan ccer clam cort ctri dbre dper druf eful estr ffau #> DQ1    0    4    0    0    0    0    0    0    2    0    2    0    0    1    0 #> DQ2    0    4    1    0    0    0    0    0   20    0    2    2    0    0    0 #> DQ3    0    3    1    0    0    0    0    0    0    0    0    0    0    0    0 #> DT1    0    1    0    0    1    0    0    0    0    0    1    0    0    1    0 #> DT2    0    2    1    1    0    0    2    0    0    0    1    1    0    1    0 #> DT3    0    3    0    1    0    0    0    0    0    0    0    0    0    0    0 #> LQ1    1    3    0    0    0    0    0    0    0    0    1    0    0    0    1 #> LQ2    1    1    0    0    0    0    0    0    0    0    1    0    0    0    0 #> LQ3    0    2    1    1    0    1    0    0    0    0    7    0    0    0    0 #> LT1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0 #> LT2    0    1    0    0    0    0    0    0    0    0    0    0    0    0    0 #> LT3    0    5    0    0    0    0    0    0    0    0    1    0    0    0    0 #> RQ1    0    3    0    0    0    1    1    1    0    0    3    0    0    0    2 #> RQ2    0    7    0    4    0    0    0    0    7    1    6    0    0    3    2 #> RQ3    2   13    0    1    0    0    0    0   10    3    6    0    2    0    2 #> RT1    0    4    0    3    0    2    0    1    0    0    1    0    0    0    7 #> RT2    0    1    2    3    1    0    0    1    1    0    2    0    0    4   12 #> RT3    0    5    1    5    0    0    1    0    0    0    0    0    0    0    6 #> WQ1    0    3    0    1    1    0    0    3    0    0    0    0    0    0    0 #> WQ2    0    4    0    1    0    1    0    0    0    0   20    0    0    2    0 #> WQ3    0   10    0    3    0    0    0    0    0    0    0    0    0    1    2 #> WT1    0    1    0    0    0    0    0    1    0    0    0    0    0    1    1 #> WT2    0    2    1    1    0    0    0    0    0    0    2    0    0    0    0 #> WT3    0    4    0    0    0    0    0    0    0    0    0    0    0    0    1 #>     hobv iiso mbor mobs odol ogla pinc ppyg pvic tuni vcos vicr vidi  microhab #> DQ1    0    0    0    0    0    0    0    0    0    0    0    0    9 dead.wood #> DQ2    0    0    0    0    0    0    0    1    0    0    0    0    9 dead.wood #> DQ3    3    0    0    0    0    0    0    0    0    0    0    0    2 dead.wood #> DT1    1    0    5    0    0    0    0    0    1    0    0    0    0 dead.wood #> DT2    1    0    0    0    0    0    0    0    0    1    0    0    2 dead.wood #> DT3    6    0    0    0    0    0    0    0    1    0    0    0    2 dead.wood #> LQ1    0    0    0    0    0    0    0   28    0    0    0    0    0    litter #> LQ2    0    0    0    0    0    0    0   13    1    0    0    0    0    litter #> LQ3    0    0    0    0    0    0    0   69    1    0    0    0    0    litter #> LT1    0    0    0    0    0    0    0    0    0    0    0    0    0    litter #> LT2    0    0    0    0    0    0    0    0    1    0    0    0    0    litter #> LT3    0    0    0    0    0    0    1    0    1    2    0    0    0    litter #> RQ1    2    0    0    0    0    1    0    5    0    0    0    0    4      rock #> RQ2    9    0    0    2   13    3    0   28    1    2    2    0    7      rock #> RQ3    2    0    0    1    0    0    0    9    1    0    0    0   11      rock #> RT1    8    6    0    0    0    0    3    0    4    5    0    0    0      rock #> RT2    1    8    0    0    0    0    5    0    1    3    0    0    2      rock #> RT3    4    1    0    0    0    0    3    0    3    1    0    0    0      rock #> WQ1    0    2    0    0    0    0    2   31    1    0    0    0    4 live.wood #> WQ2    0    0    0    2    0    0    1   56    1    2    0    0    0 live.wood #> WQ3    0    0    0    0    0    0    1    5    0    0    0    1    1 live.wood #> WT1    0    0    0    0    0    0    0    0    0    1    0    0    0 live.wood #> WT2    0    0    0    0    0    0    0    0    0    0    0    0    0 live.wood #> WT3    0    0    0    0    0    0    0    0    0    0    0    0    1 live.wood #>      method   NA #> DQ1 quadrat iiso #> DQ2 quadrat ppyg #> DQ3 quadrat iiso #> DT1    time ppyg #> DT2    time iiso #> DT3    time ppyg #> LQ1 quadrat iiso #> LQ2 quadrat ppyg #> LQ3 quadrat iiso #> LT1    time ppyg #> LT2    time iiso #> LT3    time ppyg #> RQ1 quadrat iiso #> RQ2 quadrat ppyg #> RQ3 quadrat iiso #> RT1    time ppyg #> RT2    time iiso #> RT3    time ppyg #> WQ1 quadrat iiso #> WQ2 quadrat ppyg #> WQ3 quadrat iiso #> WT1    time ppyg #> WT2    time iiso #> WT3    time ppyg ## Taxa table and summary as.data.frame(x, fun = mts) #>      t.occ t.abu                      species                       author #> aacu     3     4         Acanthinula aculeata         (O. F. Muller, 1774) #> amin    23    86            Aegopinella minor              (Stabile, 1864) #> apur     7     8             Aegopinella pura                (Alder, 1830) #> bbip    12    25              Balea biplicata              (Montagu, 1803) #> bcan     3     3               Bulgarica cana                 (Held, 1836) #> ccer     4     5            Cochlodina cerata          (Rossmassler, 1836) #> clam     3     4          Cochlodina laminata              (Montagu, 1803) #> cort     5     7        Cochlodina orthostoma                (Menke, 1830) #> ctri     5    40        Carychium tridentatum                (Risso, 1826) #> dbre     2     4         Daudebardia brevipes           (Draparnaud, 1805) #> dper    15    56          Discus perspectivus (Megerle von Muhlfeld, 1816) #> druf     2     3             Daudebardia rufa           (Draparnaud, 1805) #> eful     1     2             Euconulus fulvus         (O. F. Muller, 1774) #> estr     8    14         Euomphalia strigella           (Draparnaud, 1801) #> ffau    10    36         Chilostoma faustinum          (Rossmassler, 1835) #> hobv    10    37         Helicodonta obvoluta         (O. F. Muller, 1774) #> iiso     4    17 Isognomostoma isognomostomos             (Schroter, 1784) #> mbor     1     5      Macrogastra latestriata           (A. Schmidt, 1857) #> mobs     3     5                  Ena obscura         (O. F. Muller, 1774) #> odol     1    13                Orcula dolium           (Draparnaud, 1801) #> ogla     2     4             Oxychilus glaber          (Rossmassler, 1838) #> pinc     7    16       Perforatella incarnata         (O. F. Muller, 1774) #> ppyg    10   245             Punctum pygmaeum           (Draparnaud, 1801) #> pvic    13    18          Perforatella vicina          (Rossmassler, 1842) #> tuni     8    17           Trichia unidentata           (Draparnaud, 1805) #> vcos     1     2             Vallonia costata         (O. F. Muller, 1774) #> vicr     1     1           Vitrea crystallina         (O. F. Muller, 1774) #> vidi    12    54              Vitrea diaphana               (Studer, 1820) #>           familia size #> aacu  Valloniidae  2.0 #> amin    Zonitidae  9.0 #> apur    Zonitidae  5.0 #> bbip Clausiliidae 18.0 #> bcan Clausiliidae 18.0 #> ccer Clausiliidae 18.0 #> clam Clausiliidae 17.0 #> cort Clausiliidae 13.0 #> ctri   Ellobiidae  2.3 #> dbre    Zonitidae   NA #> dper Endodontidae  6.5 #> druf    Zonitidae   NA #> eful  Euconulidae  3.5 #> estr    Helicidae 18.0 #> ffau    Helicidae 20.0 #> hobv    Helicidae 15.0 #> iiso    Helicidae 11.0 #> mbor Clausiliidae 15.0 #> mobs       Enidae  9.0 #> odol    Orculidae  9.0 #> ogla    Zonitidae 14.0 #> pinc    Helicidae 16.0 #> ppyg Endodontidae  1.5 #> pvic    Helicidae 15.5 #> tuni    Helicidae  8.0 #> vcos  Valloniidae  2.7 #> vicr    Zonitidae  4.0 #> vidi    Zonitidae  4.2 ## Taxa table and raw data transpose as.data.frame(x, fun = mtr) #>      DQ1 DQ2 DQ3 DT1 DT2 DT3 LQ1 LQ2 LQ3 LT1 LT2 LT3 RQ1 RQ2 RQ3 RT1 RT2 RT3 #> aacu   0   0   0   0   0   0   1   1   0   0   0   0   0   0   2   0   0   0 #> amin   4   4   3   1   2   3   3   1   2   0   1   5   3   7  13   4   1   5 #> apur   0   1   1   0   1   0   0   0   1   0   0   0   0   0   0   0   2   1 #> bbip   0   0   0   0   1   1   0   0   1   0   0   0   0   4   1   3   3   5 #> bcan   0   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   1   0 #> ccer   0   0   0   0   0   0   0   0   1   0   0   0   1   0   0   2   0   0 #> clam   0   0   0   0   2   0   0   0   0   0   0   0   1   0   0   0   0   1 #> cort   0   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1   1   0 #> ctri   2  20   0   0   0   0   0   0   0   0   0   0   0   7  10   0   1   0 #> dbre   0   0   0   0   0   0   0   0   0   0   0   0   0   1   3   0   0   0 #> dper   2   2   0   1   1   0   1   1   7   0   0   1   3   6   6   1   2   0 #> druf   0   2   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0   0 #> eful   0   0   0   0   0   0   0   0   0   0   0   0   0   0   2   0   0   0 #> estr   1   0   0   1   1   0   0   0   0   0   0   0   0   3   0   0   4   0 #> ffau   0   0   0   0   0   0   1   0   0   0   0   0   2   2   2   7  12   6 #> hobv   0   0   3   1   1   6   0   0   0   0   0   0   2   9   2   8   1   4 #> iiso   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   6   8   1 #> mbor   0   0   0   5   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> mobs   0   0   0   0   0   0   0   0   0   0   0   0   0   2   1   0   0   0 #> odol   0   0   0   0   0   0   0   0   0   0   0   0   0  13   0   0   0   0 #> ogla   0   0   0   0   0   0   0   0   0   0   0   0   1   3   0   0   0   0 #> pinc   0   0   0   0   0   0   0   0   0   0   0   1   0   0   0   3   5   3 #> ppyg   0   1   0   0   0   0  28  13  69   0   0   0   5  28   9   0   0   0 #> pvic   0   0   0   1   0   1   0   1   1   0   1   1   0   1   1   4   1   3 #> tuni   0   0   0   0   1   0   0   0   0   0   0   2   0   2   0   5   3   1 #> vcos   0   0   0   0   0   0   0   0   0   0   0   0   0   2   0   0   0   0 #> vicr   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0 #> vidi   9   9   2   0   2   2   0   0   0   0   0   0   4   7  11   0   2   0 #>      WQ1 WQ2 WQ3 WT1 WT2 WT3                      species #> aacu   0   0   0   0   0   0         Acanthinula aculeata #> amin   3   4  10   1   2   4            Aegopinella minor #> apur   0   0   0   0   1   0             Aegopinella pura #> bbip   1   1   3   0   1   0              Balea biplicata #> bcan   1   0   0   0   0   0               Bulgarica cana #> ccer   0   1   0   0   0   0            Cochlodina cerata #> clam   0   0   0   0   0   0          Cochlodina laminata #> cort   3   0   0   1   0   0        Cochlodina orthostoma #> ctri   0   0   0   0   0   0        Carychium tridentatum #> dbre   0   0   0   0   0   0         Daudebardia brevipes #> dper   0  20   0   0   2   0          Discus perspectivus #> druf   0   0   0   0   0   0             Daudebardia rufa #> eful   0   0   0   0   0   0             Euconulus fulvus #> estr   0   2   1   1   0   0         Euomphalia strigella #> ffau   0   0   2   1   0   1         Chilostoma faustinum #> hobv   0   0   0   0   0   0         Helicodonta obvoluta #> iiso   2   0   0   0   0   0 Isognomostoma isognomostomos #> mbor   0   0   0   0   0   0      Macrogastra latestriata #> mobs   0   2   0   0   0   0                  Ena obscura #> odol   0   0   0   0   0   0                Orcula dolium #> ogla   0   0   0   0   0   0             Oxychilus glaber #> pinc   2   1   1   0   0   0       Perforatella incarnata #> ppyg  31  56   5   0   0   0             Punctum pygmaeum #> pvic   1   1   0   0   0   0          Perforatella vicina #> tuni   0   2   0   1   0   0           Trichia unidentata #> vcos   0   0   0   0   0   0             Vallonia costata #> vicr   0   0   1   0   0   0           Vitrea crystallina #> vidi   4   0   1   0   0   1              Vitrea diaphana #>                            author      familia size #> aacu         (O. F. Muller, 1774)  Valloniidae  2.0 #> amin              (Stabile, 1864)    Zonitidae  9.0 #> apur                (Alder, 1830)    Zonitidae  5.0 #> bbip              (Montagu, 1803) Clausiliidae 18.0 #> bcan                 (Held, 1836) Clausiliidae 18.0 #> ccer          (Rossmassler, 1836) Clausiliidae 18.0 #> clam              (Montagu, 1803) Clausiliidae 17.0 #> cort                (Menke, 1830) Clausiliidae 13.0 #> ctri                (Risso, 1826)   Ellobiidae  2.3 #> dbre           (Draparnaud, 1805)    Zonitidae   NA #> dper (Megerle von Muhlfeld, 1816) Endodontidae  6.5 #> druf           (Draparnaud, 1805)    Zonitidae   NA #> eful         (O. F. Muller, 1774)  Euconulidae  3.5 #> estr           (Draparnaud, 1801)    Helicidae 18.0 #> ffau          (Rossmassler, 1835)    Helicidae 20.0 #> hobv         (O. F. Muller, 1774)    Helicidae 15.0 #> iiso             (Schroter, 1784)    Helicidae 11.0 #> mbor           (A. Schmidt, 1857) Clausiliidae 15.0 #> mobs         (O. F. Muller, 1774)       Enidae  9.0 #> odol           (Draparnaud, 1801)    Orculidae  9.0 #> ogla          (Rossmassler, 1838)    Zonitidae 14.0 #> pinc         (O. F. Muller, 1774)    Helicidae 16.0 #> ppyg           (Draparnaud, 1801) Endodontidae  1.5 #> pvic          (Rossmassler, 1842)    Helicidae 15.5 #> tuni           (Draparnaud, 1805)    Helicidae  8.0 #> vcos         (O. F. Muller, 1774)  Valloniidae  2.7 #> vicr         (O. F. Muller, 1774)    Zonitidae  4.0 #> vidi               (Studer, 1820)    Zonitidae  4.2 ## Why is it useful? ## Instead of glm(x$xtab[,\"amin\"] ~ microhab + method, data = x$samp, family = poisson) #>  #> Call:  glm(formula = x$xtab[, \"amin\"] ~ microhab + method, family = poisson,  #>     data = x$samp) #>  #> Coefficients: #>       (Intercept)     microhablitter  microhablive.wood       microhabrock   #>            0.6475            -0.3483             0.3448             0.6633   #>     methodquadrat   #>            0.6758   #>  #> Degrees of Freedom: 23 Total (i.e. Null);  19 Residual #> Null Deviance:\t    49.38  #> Residual Deviance: 28.51 \tAIC: 107 ## it is more convenient to use glm(amin ~ microhab + method, data = msr(x), family = poisson) #>  #> Call:  glm(formula = amin ~ microhab + method, family = poisson, data = msr(x)) #>  #> Coefficients: #>       (Intercept)     microhablitter  microhablive.wood       microhabrock   #>            0.6475            -0.3483             0.3448             0.6633   #>     methodquadrat   #>            0.6758   #>  #> Degrees of Freedom: 23 Total (i.e. Null);  19 Residual #> Null Deviance:\t    49.38  #> Residual Deviance: 28.51 \tAIC: 107"},{"path":"/reference/dolina.html","id":null,"dir":"Reference","previous_headings":"","what":"The Dolina Dataset — dolina","title":"The Dolina Dataset — dolina","text":"Data collected dolines (sinkholes, karstic depressions) Northeast Hungary.","code":""},{"path":"/reference/dolina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Dolina Dataset — dolina","text":"","code":"data(dol.count) data(dol.samp) data(dol.taxa)"},{"path":"/reference/dolina.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Dolina Dataset — dolina","text":"dol.count data set data frame 297 observations following 4 variables. samp factor levels samples. taxa factor levels species. count numeric vector count data. segm factor levels segments. dol.samp data set data frame 24 observations following 2 variables. microhab factor levels dead.wood litter live.wood rock microhabitats. method factor levels time quadrat sampling method applied. dol.taxa data set data frame 121 observations following 4 variables. species factor levels species names. author factor levels authors species description dates (accents removed). familia factor levels family level classification. size numeric vector major shell dimension adult specimen.","code":""},{"path":"/reference/dolina.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Dolina Dataset — dolina","text":"data sets results 'DOLINA 2007' expedition (Vilisics et al. 2008). Species characteristics based Kerney et al. (1983). full dataset (S\\'olymos &  Kemencei 2008) example derived available Dataverse Network (hdl:1902.1/12060) code make subsetting.","code":""},{"path":"/reference/dolina.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The Dolina Dataset — dolina","text":"S\\'olymos, P.,  Kemencei, Z. (2008) Methodological study data set land snails Dolina 2007 project. Available Dataverse Network: hdl:1902.1/12060. S\\'olymos, P., Kemencei, Z., P\\'-Gergely, B., Farkas, R., Vilisics, F., Hornung, E. (2009) shell accumulation matter micro scale land snail surveys? Malacologia, 51, 389--393. Vilisics, F., Nagy, ., S\\'olymos, P., Farkas, R., Kemencei, Z., P\\'-Gergely, B., Kisfali, M., Hornung, E. (2008) Data terrestrial isopoda fauna Als\\'o-hegy, Aggtelek National Park, Hungary. Folia Faunistica Slovaca 13, 9--12. Kerney, M. P., Cameron, R. . D., Jungbluth, J. H. (1983) Die Landschnecken Nord- und Mitteleuropas. P. Parey, Hamburg-Berlin, 384 p.","code":""},{"path":"/reference/dolina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Dolina Dataset — dolina","text":"","code":"data(dol.count) str(dol.count) #> 'data.frame':\t297 obs. of  4 variables: #>  $ samp : Factor w/ 24 levels \"DQ1\",\"DQ2\",\"DQ3\",..: 7 7 7 7 7 7 7 10 8 8 ... #>  $ taxa : Factor w/ 32 levels \"aacu\",\"amin\",..: 1 2 2 13 17 25 25 32 1 2 ... #>  $ count: num  1 1 2 1 1 13 15 0 1 1 ... #>  $ segm : Factor w/ 3 levels \"fresh\",\"broken\",..: 1 2 1 2 2 1 2 3 1 2 ... data(dol.samp) str(dol.samp) #> 'data.frame':\t24 obs. of  2 variables: #>  $ microhab: Factor w/ 4 levels \"dead.wood\",\"litter\",..: 2 2 2 2 2 1 1 1 1 1 ... #>  $ method  : Factor w/ 2 levels \"time\",\"quadrat\": 2 2 1 2 1 2 1 2 1 2 ... data(dol.taxa) str(dol.taxa) #> 'data.frame':\t121 obs. of  4 variables: #>  $ species: Factor w/ 121 levels \"Acanthinula aculeata\",..: 3 2 81 82 16 17 92 93 72 32 ... #>  $ author : Factor w/ 65 levels \"(Alder, 1830)\",..: 26 53 42 19 44 47 31 14 47 43 ... #>  $ familia: Factor w/ 21 levels \"Aciculidae\",\"Bradybaenidae\",..: 1 1 14 14 6 6 17 17 17 5 ... #>  $ size   : num  3.4 5.5 16 16 2.2 2.3 17 8 12 7.5 ..."},{"path":"/reference/fill.na.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace <NA> Values with Nearest Above Values — fill.na","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"function replaces <NA> values nearest values column.","code":""},{"path":"/reference/fill.na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"","code":"fill.na(x)"},{"path":"/reference/fill.na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"x vector, matrix data frame.","code":""},{"path":"/reference/fill.na.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"function useful converting 'notebook style' data 'stcs' object. 'notebook style' data means observations registered non-redundant way, e.g. typing spreadsheet.","code":""},{"path":"/reference/fill.na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"matrix data frame.","code":""},{"path":"/reference/fill.na.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/fill.na.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/fill.na.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"function vectorized, can bit slow large data sets.","code":""},{"path":[]},{"path":"/reference/fill.na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace <NA> Values with Nearest Above Values — fill.na","text":"","code":"x <- data.frame(     samp = c(\"s1\",NA,\"s2\",NA,\"s3\",\"s4\"),     taxa = c(\"t1\",NA,\"s1\",\"s2\",\"s3\",NA),     count = c(1, 2, 10, 3, 4, 1),     segm = c(\"male\",\"female\",\"male\",\"female\",\"male\",\"male\")) x #>   samp taxa count   segm #> 1   s1   t1     1   male #> 2 <NA> <NA>     2 female #> 3   s2   s1    10   male #> 4 <NA>   s2     3 female #> 5   s3   s3     4   male #> 6   s4 <NA>     1   male fill.na(x) #>   samp taxa count   segm #> 1   s1   t1     1   male #> 2   s1   t1     2 female #> 3   s2   s1    10   male #> 4   s2   s2     3 female #> 5   s3   s3     4   male #> 6   s4   s3     1   male fill.na(c(1:4, NA)) #> [1] 1 2 3 4 4"},{"path":"/reference/image.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Image Plot of a 'dist' Object — image.dist","title":"Image Plot of a 'dist' Object — image.dist","text":"Image plot 'dist' object.","code":""},{"path":"/reference/image.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Image Plot of a 'dist' Object — image.dist","text":"","code":"# S3 method for dist image(x, grad, lab = TRUE, ...)"},{"path":"/reference/image.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Image Plot of a 'dist' Object — image.dist","text":"x object class 'dist', similarity matrix. grad Gradient use ordering observations x. lab Labels use left axis, can character vector. ... graphical parameters passed image.","code":""},{"path":"/reference/image.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Image Plot of a 'dist' Object — image.dist","text":"Creates image plot side effect. Invisibly returns plotted values.","code":""},{"path":"/reference/image.dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Image Plot of a 'dist' Object — image.dist","text":"Peter Solymos <solymos@ualberta.ca>","code":""},{"path":"/reference/image.dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Image Plot of a 'dist' Object — image.dist","text":"","code":"data(dol.count, dol.samp) m <- mefa(stcs(dol.count), dol.samp) d <- dist(m$xtab) g <- with(m$samp, interaction(microhab, method)) image(d)"},{"path":"/reference/label.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Label to an Object and Return It — label","title":"Assign Label to an Object and Return It — label","text":"function assigns label kind object. label later can retrieved reused.","code":""},{"path":"/reference/label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Label to an Object and Return It — label","text":"","code":"label(x) label(x) <- value"},{"path":"/reference/label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Label to an Object and Return It — label","text":"value expression. x object.","code":""},{"path":"/reference/label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Assign Label to an Object and Return It — label","text":"label can expression assigned object. stored character attribute. Inheritance implemented, transformation object another one, label lost.","code":""},{"path":"/reference/label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Label to an Object and Return It — label","text":"Print label value.","code":""},{"path":"/reference/label.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Assign Label to an Object and Return It — label","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/label.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assign Label to an Object and Return It — label","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Label to an Object and Return It — label","text":"","code":"x <- 1:10 x #>  [1]  1  2  3  4  5  6  7  8  9 10 ## Assign a character label(x) <- \"x is a vector\" x #>  [1]  1  2  3  4  5  6  7  8  9 10 #> attr(,\"label\") #> [1] \"x is a vector\" ## Get back the label label(x) #> [1] \"x is a vector\" ## Note the effect of deparsing label(x) <- 1:10 label(x) #> [1] \"1:10\""},{"path":"/reference/mat2list.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix Manipulation Tools — mat2list","title":"Matrix Manipulation Tools — mat2list","text":"Converts matrix list, calculates matrix fill, exclude rows/columns certain rox/column sums.","code":""},{"path":"/reference/mat2list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix Manipulation Tools — mat2list","text":"","code":"mat2list(x, MARGIN = 1) mfill(x) rdrop(x, cutoff = 0, attrib = FALSE) cdrop(x, cutoff = 0, attrib = FALSE)"},{"path":"/reference/mat2list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix Manipulation Tools — mat2list","text":"x vector matrix converted. cdrop rdrop can take mefa objects argument. MARGIN Margin c(1, 2), indicating respectively rows colums listed. cutoff Numeric, exclude rows/columns sums <= cutoff. attrib Logical, vector excluded rows/columns attached return value attribute.","code":""},{"path":"/reference/mat2list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix Manipulation Tools — mat2list","text":"mat2list returns list length nrow(x) ncol(x) depending MARGIN. Elements rows/columns x. Dimnames retained names. mfill returns single number matrix fill value. rdrop cdrop returns original object excluding rows (rdrop), columns (cdrop) sum <= cutoff. Excluded row/colum numbers specifications stored \"exclude\" attribute attrib = TRUE.","code":""},{"path":"/reference/mat2list.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Matrix Manipulation Tools — mat2list","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mat2list.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Matrix Manipulation Tools — mat2list","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/mat2list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix Manipulation Tools — mat2list","text":"","code":"x <- matrix(1:12, 3, 4) rownames(x) <- letters[1:3] colnames(x) <- LETTERS[1:4] mat2list(x, 1) #> $a #>  A  B  C  D  #>  1  4  7 10  #>  #> $b #>  A  B  C  D  #>  2  5  8 11  #>  #> $c #>  A  B  C  D  #>  3  6  9 12  #>  mat2list(x, 2) #> $A #> a b c  #> 1 2 3  #>  #> $B #> a b c  #> 4 5 6  #>  #> $C #> a b c  #> 7 8 9  #>  #> $D #>  a  b  c  #> 10 11 12  #>  x[2, ] <- 0 x[, 2] <- 0 mfill(x) #> [1] 0.5 mfill(x) == sum(x > 0) / prod(dim(x)) #> [1] TRUE rdrop(x) #>   A B C  D #> a 1 0 7 10 #> c 3 0 9 12 cdrop(x) #>   A C  D #> a 1 7 10 #> b 0 0  0 #> c 3 9 12 cdrop(x, cutoff = 5) #>   C  D #> a 7 10 #> b 0  0 #> c 9 12 cdrop(x, cutoff = 22) # be careful #>   #> a #> b #> c"},{"path":"/reference/mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Object of Class 'mefa' — mefa","title":"Create an Object of Class 'mefa' — mefa","text":"object class 'mefa' compendium crosstabulated taxa--samples (count) data, optionally (count) data segments, linked tables samples taxa. 'mefa' term stand acronym 'metafaunistics', indicating data processing critical often time consuming step data analysis. 'mefa' package aims help respect.","code":""},{"path":"/reference/mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Object of Class 'mefa' — mefa","text":"","code":"mefa(xtab, samp = NULL, taxa = NULL, id.samp = NULL, id.taxa = NULL, segment = TRUE, nested = FALSE, drop.zero = FALSE, drop.index = FALSE, xtab.fixed = TRUE) # S3 method for mefa is(x) # S3 method for mefa print(x, nlist = 10, ...) # S3 method for mefa summary(object, nlist = 10, ...) # S3 method for summary.mefa print(x, nlist, ...) # S3 method for mefa dim(x) # S3 method for mefa dimnames(x)"},{"path":"/reference/mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Object of Class 'mefa' — mefa","text":"xtab data. Can object class 'stcs', matrix data frame. Can count (integer) non-integer. samp data frame containing rows samples, NULL. See argument xtab.fixed details sample matching options. taxa data frame containing rows taxa, NULL. See argument xtab.fixed details taxa matching options. id.samp NULL sample names matching rownames samp, otherwise, index refers column samp names located. id.taxa NULL taxa names matching rownames taxa, otherwise, index refers column taxa names located. segment logical, whether information segments column 'stcs' object used (TRUE, default). effect xtab matrix data frame. nested logical, whether segments nested within first last (TRUE) (FALSE, default). drop.zero logical, TRUE empty samples removed result (can useful multivariate analyses). Otherwise, empty rows left intact (FALSE, default). drop.index logical, whether columns samples taxa tables containing names used matching removed (TRUE) reduce redundancy (FALSE, default). argument effect id.samp id.taxa NULL. xtab.fixed logical, TRUE (default) samp taxa tables subsetted ordered according names xtab. FALSE, xtab also subsetted according intersect names. Row column ordering determined xtab either cases. x, object object class 'mefa'. nlist number elements list segment names print. List segment names truncated 10 default. ... arguments passed functions.","code":""},{"path":"/reference/mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Object of Class 'mefa' — mefa","text":"Main goals mefa function (1) convert long formatted object 'stcs' crosstabulated optionally segmented 'mefa' object (2) link crosstabulation tables samples taxa. segments can nested within . feature can useful, segments represent e.g. subsequent sampling periods (years) aim detect effects data accumulation time. mefa object can viewed project oriented compendium data. contains 3 dimensional (samples, taxa, segments) representation count data data tables samples taxa. Segments contain information particular internal division data (sub populations, method specific partitions, repeated measures), technical significance. Thus data tables segments supported. Input values may contain non-integer values well. input xtab matrix, dimnames necessary either samp taxa tables provided. cases, dimnames necessary. way, simple statistics can returned matrix. print method returns basic information, instead long structural representation. summary contains statistics calculated 'mefa' object (species richness, number individuals, occupancy, abundance, total sum, matrix fill, etc., see 'Value' section). list can recalled e.g. unclass(summary(x)), elements list e.g. summary(x)$s.rich. Methods extracting, subsetting, plotting reporting 'mefa' objects discussed elsewhere (see links 'See also' section). 'mefa' objects can used analyses, see 'Examples' vignette (vignette(\"mefa\")). .mefa function used 'mefa' object argument, samples taxa tables used samp taxa arguments missing. aim redefine tables, also can given.","code":""},{"path":"/reference/mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Object of Class 'mefa' — mefa","text":"mefa function returns object class 'mefa'. list 5 elements: call function call. xtab crosstabulated count data, rows samples, columns taxa. segm list matrices segments used, otherwise NULL. samp data frame sample related data (rows correspond samples) provided, otherwise NULL. taxa data frame taxa related data (rows correspond taxa) provided, otherwise NULL. summary.mefa function returns list invisibly, elements:  s.rich: vector species richness values samples,  s.abu: vector number individuals values samples,  t.occ: number sites occupied species,  t.abu: abundances species,  ntot: total number individuals,  mfill: matrix fill,  nsamp: number samples,  ntaxa: number taxa,  nsegm: number segments,  segment: vector segment names,  call: function call 'mefa' object,  nested, drop.zero, xtab.fixed: attributes 'mefa' object. method dim returns vector length 3 values number samples, number taxa number segments 'mefa' object. third value 1 cases, s$segm NULL (1 undefined segment essentially identical matrix x$xtab, thus need replicate). dimnames method returns list three character vectors names samples, taxa segments. can NULL well.","code":""},{"path":"/reference/mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an Object of Class 'mefa' — mefa","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Object of Class 'mefa' — mefa","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/mefa.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create an Object of Class 'mefa' — mefa","text":"mefa function alone can used instead combination object classes xcount xorder used older (< 2.0) versions mefa package. also extended previously undocumented features.","code":""},{"path":[]},{"path":"/reference/mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Object of Class 'mefa' — mefa","text":"","code":"data(dol.count, dol.samp, dol.taxa) ## Input is stcs x1 <- mefa(stcs(dol.count)) x1 #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>  ## Input is matrix x2 <- mefa(x1$xtab) x2 #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 1 (all inclusive) segment, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>  ## Attach data frame for samples x3 <- mefa(stcs(dol.count), dol.samp) x3 #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa not provided. #>  ## Attach data frame for samples and taxa x4 <- mefa(stcs(dol.count), dol.samp, dol.taxa) x4 #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, broken, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  ## Methods ## (chapter 'See also' provides ## links for further methods) summary(x4) #>  #> Call: #> mefa(xtab = stcs(dol.count), samp = dol.samp, taxa = dol.taxa) #>  #>                    Summary #> Total sum              731 #> Matrix fill (%)         26 #> Number of samples       24 #> Number of taxa          28 #> Number of segments       2 #>  #> Segments (non-nested): #> fresh, broken #>  #>            s.rich    s.abu     t.occ     t.abu #> Min.     0.000000  0.00000  1.000000   1.00000 #> 1st Qu.  5.000000  9.75000  2.000000   4.00000 #> Median   7.000000 20.50000  4.500000  10.50000 #> Mean     7.333333 30.45833  6.285714  26.10714 #> 3rd Qu. 10.000000 44.75000 10.000000  27.75000 #> Max.    16.000000 97.00000 23.000000 245.00000 #>  ## Descriptives inside the summary unclass(summary(x4)) #> $s.rich #> DQ1 DQ2 DQ3 DT1 DT2 DT3 LQ1 LQ2 LQ3 LT1 LT2 LT3 RQ1 RQ2 RQ3 RT1 RT2 RT3 WQ1 WQ2  #>   5   7   4   7  10   5   5   5   7   0   2   5  10  16  13  11  15  10   9  10  #> WQ3 WT1 WT2 WT3  #>   8   5   4   3  #>  #> $s.abu #> DQ1 DQ2 DQ3 DT1 DT2 DT3 LQ1 LQ2 LQ3 LT1 LT2 LT3 RQ1 RQ2 RQ3 RT1 RT2 RT3 WQ1 WQ2  #>  18  39   9  11  13  13  34  17  82   0   2  10  23  97  63  44  47  30  48  90  #> WQ3 WT1 WT2 WT3  #>  24   5   6   6  #>  #> $t.occ #> aacu amin apur bbip bcan ccer clam cort ctri dbre dper druf eful estr ffau hobv  #>    3   23    7   12    3    4    3    5    5    2   15    2    1    8   10   10  #> iiso mbor mobs odol ogla pinc ppyg pvic tuni vcos vicr vidi  #>    4    1    3    1    2    7   10   13    8    1    1   12  #>  #> $t.abu #> aacu amin apur bbip bcan ccer clam cort ctri dbre dper druf eful estr ffau hobv  #>    4   86    8   25    3    5    4    7   40    4   56    3    2   14   36   37  #> iiso mbor mobs odol ogla pinc ppyg pvic tuni vcos vicr vidi  #>   17    5    5   13    4   16  245   18   17    2    1   54  #>  #> $ntot #> [1] 731 #>  #> $mfill #> [1] 0.2619048 #>  #> $nsamp #> [1] 24 #>  #> $ntaxa #> [1] 28 #>  #> $nsegm #> [1] 2 #>  #> $segment #> [1] \"fresh\"  \"broken\" #>  #> $call #> mefa(xtab = stcs(dol.count), samp = dol.samp, taxa = dol.taxa) #>  #> $nested #> [1] FALSE #>  #> $drop.zero #> [1] FALSE #>  #> $xtab.fixed #> [1] TRUE #>  #> attr(,\"nlist\") #> [1] 10 ## Testing mefa objects is(x4, \"mefa\") #> [1] TRUE ## Removing empty samples as.mefa(x4, drop.zero = TRUE) #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 23 samples, #>  $ segm: 2 (non-nested) segments: #>          broken, fresh, #>  $ samp: table for samples provided (2 variables), #>  $ taxa: table for taxa provided (4 variables). #>  ## Dimensions dim(x4) #> [1] 24 28  2 ## Dimnames dimnames(x4) #> $samp #>  [1] \"DQ1\" \"DQ2\" \"DQ3\" \"DT1\" \"DT2\" \"DT3\" \"LQ1\" \"LQ2\" \"LQ3\" \"LT1\" \"LT2\" \"LT3\" #> [13] \"RQ1\" \"RQ2\" \"RQ3\" \"RT1\" \"RT2\" \"RT3\" \"WQ1\" \"WQ2\" \"WQ3\" \"WT1\" \"WT2\" \"WT3\" #>  #> $taxa #>  [1] \"aacu\" \"amin\" \"apur\" \"bbip\" \"bcan\" \"ccer\" \"clam\" \"cort\" \"ctri\" \"dbre\" #> [11] \"dper\" \"druf\" \"eful\" \"estr\" \"ffau\" \"hobv\" \"iiso\" \"mbor\" \"mobs\" \"odol\" #> [21] \"ogla\" \"pinc\" \"ppyg\" \"pvic\" \"tuni\" \"vcos\" \"vicr\" \"vidi\" #>  #> $segm #> [1] \"fresh\"  \"broken\" #>  ## Simple examples how to use mefa objects in analyis ## GLM on sample abundances mod <- glm(summary(x4)$s.abu ~ .^2,     data = x4$samp, family = quasipoisson) summary(mod) #>  #> Call: #> glm(formula = summary(x4)$s.abu ~ .^2, family = quasipoisson,  #>     data = x4$samp) #>  #> Coefficients: #>                                 Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                       2.5123     0.5476   4.588 0.000303 *** #> microhablitter                   -1.1260     1.1066  -1.018 0.324035     #> microhablive.wood                -0.7777     0.9760  -0.797 0.437229     #> microhabrock                      1.1849     0.6258   1.893 0.076532 .   #> methodquadrat                     0.5787     0.6841   0.846 0.410055     #> microhablitter:methodquadrat      1.8267     1.2150   1.504 0.152187     #> microhablive.wood:methodquadrat   1.6756     1.0905   1.537 0.143944     #> microhabrock:methodquadrat       -0.1650     0.7876  -0.210 0.836672     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasipoisson family taken to be 11.09643) #>  #>     Null deviance: 574.42  on 23  degrees of freedom #> Residual deviance: 182.64  on 16  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 5 #>  ## See the demo and vignette for more examples # demo(mefa) # vignette(\"mefa\") ## Cluster analysis of community matrix x5 <- aggregate(x4, c(\"method\", \"microhab\")) h <- hclust(dist(x5$xtab)) plot(h)"},{"path":"/reference/mefaCheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"functions evaluates internal structute 'mefa' object.","code":""},{"path":"/reference/mefaCheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"","code":"mefaCheck(x) mefaCompare(x1, x2, strict = FALSE)"},{"path":"/reference/mefaCheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"x, x1, x2 object class 'mefa'. strict logical, TRUE function checks ordering dimnames , otherwise compares matching.","code":""},{"path":"/reference/mefaCheck.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"mefaCheck returns list, first element logical TRUE indicating requirements met. FALSE, following elements list describe encountered problems characters.  mefaCheck called .mefa function. mefaCompare compares two mefa objects. dimnames, corresponding values xtab segm parts identical, result TRUE, otherwise FALSE. Different ordering dimnames allowed, comparison based numeric values determined dimnames.","code":""},{"path":"/reference/mefaCheck.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefaCheck.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/mefaCheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Compare Object(s) of Class 'mefa' — mefaCheck","text":"","code":"x <- matrix(rpois(20,1), 5, 4) m <- mefa(x) mefaCheck(m) #> [[1]] #> [1] TRUE #>  data(dol.count) x1 <- mefa(stcs(dol.count)) x2 <- mefa(melt(x1)) mefaCompare(x1, x2) #> [1] TRUE mefaCompare(x1, x2, strict = TRUE) #> [1] FALSE"},{"path":"/reference/mefaCrosstab.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"function makes cross tabulation object class 'stcs'. Similar table function handles specialities 'stcs' object class (.e. removes 'pseudo species' created indicate empty samples). used internally function mefa make 3 dimensional representation data.","code":""},{"path":"/reference/mefaCrosstab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"","code":"mefaCrosstab(x, segment = FALSE, nested = FALSE, drop.zero = FALSE)"},{"path":"/reference/mefaCrosstab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"x object class 'stcs'. segment logical, TRUE, crosstabulation made 2 dimensions samp (sample) taxa columns x. Otherwise, crosstabulation made 3 dimensions samp, taxa segm (segment) columns. nested logical, FALSE count values segments independent, TRUE crosstabulated matrices summed nested fashion segment level 1 number segments (indicated segment levels well). drop.zero argument passed function stcs, indicating whether empty samples (zero sum) removed prior cross tabulation (TRUE), (FALSE).","code":""},{"path":"/reference/mefaCrosstab.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"cross tabulation object class 'stcs' made function xtabs, whic accepts non-integer values .","code":""},{"path":"/reference/mefaCrosstab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"returs matrix segment = FALSE list matrices segments segment = TRUE.","code":""},{"path":"/reference/mefaCrosstab.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefaCrosstab.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/mefaCrosstab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross Tabulate an Object of Class 'stcs' — mefaCrosstab","text":"","code":"x <- data.frame(sample = LETTERS[c(1,1,2,2,3,4)],     species = c(letters[c(5,5,5,6,7)], \"zero.pseudo\"),     count = c(1,2,10,3,4,0), segment = letters[c(8,9,8,9,8,8)]) y <- stcs(x) mefaCrosstab(y) #>     taxa #> samp  e f g #>    A  3 0 0 #>    B 10 3 0 #>    C  0 0 4 #>    D  0 0 0 mefaCrosstab(y, segment = TRUE) #> $h #>     taxa #> samp  e f g #>    A  1 0 0 #>    B 10 0 0 #>    C  0 0 4 #>    D  0 0 0 #>  #> $i #>     taxa #> samp e f g #>    A 2 0 0 #>    B 0 3 0 #>    C 0 0 0 #>    D 0 0 0 #>  mefaCrosstab(y, segment = TRUE, nested = TRUE) #> $h #>     taxa #> samp  e f g #>    A  1 0 0 #>    B 10 0 0 #>    C  0 0 4 #>    D  0 0 0 #>  #> $`h-i` #>     taxa #> samp  e f g #>    A  3 0 0 #>    B 10 3 0 #>    C  0 0 4 #>    D  0 0 0 #>  ## Examples for non-integer data y[1:5, 3] <- y[1:5, 3] + 0.123 mefaCrosstab(y) #>     taxa #> samp      e     f     g #>    A  3.246 0.000 0.000 #>    B 10.123 3.123 0.000 #>    C  0.000 0.000 4.123 #>    D  0.000 0.000 0.000 mefaCrosstab(y, segment = TRUE) #> $h #>     taxa #> samp      e f     g #>    A  1.123 0 0.000 #>    B 10.123 0 0.000 #>    C  0.000 0 4.123 #>    D  0.000 0 0.000 #>  #> $i #>     taxa #> samp     e     f g #>    A 2.123 0.000 0 #>    B 0.000 3.123 0 #>    C 0.000 0.000 0 #>    D 0.000 0.000 0 #>"},{"path":"/reference/mefaNestedless.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Non-Nested 'mefa' Object — mefaNestedless","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"functions makes non-nested 'mefa' object.","code":""},{"path":"/reference/mefaNestedless.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"","code":"mefaNestedless(x)"},{"path":"/reference/mefaNestedless.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"x objects class 'mefa' nested segments.","code":""},{"path":"/reference/mefaNestedless.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"Returns object class 'mefa', non-nested segments. function internally used melt.mefa function.","code":""},{"path":"/reference/mefaNestedless.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefaNestedless.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/mefaNestedless.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Non-Nested 'mefa' Object — mefaNestedless","text":"","code":"data(dol.count) x <- mefa(stcs(dol.count), nested = TRUE) x #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 2 nested segments: #>          fresh, fresh-broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>  y <- mefaNestedless(x) y #>  #> An object of class 'mefa' containing #>  #>  $ xtab: 731 individuals of 28 taxa in 24 samples, #>  $ segm: 2 (non-nested) segments: #>          fresh, fresh-broken, #>  $ samp: table for samples not provided, #>  $ taxa: table for taxa not provided. #>"},{"path":"/reference/mefaTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting and Ordering of Related Data Tables — mefaTables","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"function called mefa function subset community data matrix related data frames, can applied generally subsetting ordering.","code":""},{"path":"/reference/mefaTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"","code":"mefaTables(xtab, dframe, margin, index = NULL, drop.index = FALSE, xtab.fixed = TRUE)"},{"path":"/reference/mefaTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"xtab data matrix. dframe data frame. margin margin xtab matrix use row (margin = 1) column (margin = 2) names comparison rownames dframe. index NULL rownames used directly, else can used set column dframe used rowname comparison. drop.index logical, index column dframe deleted (index != NULL). xtab.fixed logical, TRUE xtab matrix left intact, dframe subsetted accordingly. FALSE, xtab dframe subsetted, returned values based intersect compared names.","code":""},{"path":"/reference/mefaTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"Returns list elements xtab (matrix) dtab (data frame), corresponding subsetted xtab dframe data sets, respectively. Original column row orderings input matrix xtab preserved.","code":""},{"path":"/reference/mefaTables.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefaTables.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/mefaTables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting and Ordering of Related Data Tables — mefaTables","text":"","code":"x <- matrix(rpois(20,1), 5, 4) ## Note the reverse alphabetical names rownames(x) <- letters[5:1] x #>   [,1] [,2] [,3] [,4] #> e    3    1    0    0 #> d    1    1    0    1 #> c    1    2    2    0 #> b    0    0    0    3 #> a    0    1    1    1 f <- data.frame(matrix(rnorm(30), 10, 3)) rownames(f) <- letters[1:10] f #>            X1          X2          X3 #> a  0.11203808  0.44479712  0.02956075 #> b -0.13399701  2.75541758  0.54982754 #> c -1.91008747  0.04653138 -2.27411486 #> d -0.27923724  0.57770907  2.68255718 #> e -0.31344598  0.11819487 -0.36122126 #> f  1.06730788 -1.91172049  0.21335575 #> g  0.07003485  0.86208648  1.07434588 #> h -0.63912332 -0.24323674 -0.66508825 #> i -0.04996490 -0.20608719  1.11395242 #> j -0.25148344  0.01917759 -0.24589641 ## Reverse alphabetical names preserved mefaTables(x, f, 1) #> $xtab #>   [,1] [,2] [,3] [,4] #> e    3    1    0    0 #> d    1    1    0    1 #> c    1    2    2    0 #> b    0    0    0    3 #> a    0    1    1    1 #>  #> $dtab #>           X1         X2          X3 #> e -0.3134460 0.11819487 -0.36122126 #> d -0.2792372 0.57770907  2.68255718 #> c -1.9100875 0.04653138 -2.27411486 #> b -0.1339970 2.75541758  0.54982754 #> a  0.1120381 0.44479712  0.02956075 #>  ## Now result is the intersect rownames(f) <- letters[3:12] mefaTables(x, f, 1, xtab.fixed = FALSE) #> $xtab #>   [,1] [,2] [,3] [,4] #> e    3    1    0    0 #> d    1    1    0    1 #> c    1    2    2    0 #>  #> $dtab #>           X1         X2          X3 #> e -1.9100875 0.04653138 -2.27411486 #> d -0.1339970 2.75541758  0.54982754 #> c  0.1120381 0.44479712  0.02956075 #>"},{"path":"/reference/mefadocs.html","id":null,"dir":"Reference","previous_headings":"","what":"Display Package Documentation — mefadocs","title":"Display Package Documentation — mefadocs","text":"Display package documentation using pager pdfviewer   defined options.","code":""},{"path":"/reference/mefadocs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display Package Documentation — mefadocs","text":"","code":"mefadocs(doc = c(\"ChangeLog\",\"SampleReport\"))"},{"path":"/reference/mefadocs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display Package Documentation — mefadocs","text":"doc name document (partial match, case sensitive).","code":""},{"path":"/reference/mefadocs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Display Package Documentation — mefadocs","text":"\"ChangeLog\" contains version history, \"SampleReport\" shows example LaTeX document use report.mefa prepare Sweave reports based faunistic data.","code":""},{"path":"/reference/mefadocs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Display Package Documentation — mefadocs","text":"P\\'eter S\\'olymos (solymos@ualberta.ca) adapted Jari Oksanen's vegandocs function vegan package.","code":""},{"path":"/reference/mefadocs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display Package Documentation — mefadocs","text":"","code":"if (FALSE) { mefadocs(\"Change\") mefadocs(\"Sample\") }"},{"path":"/reference/mefalogo.html","id":null,"dir":"Reference","previous_headings":"","what":"Schematic Plot of an Object of Class 'mefa' — mefalogo","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"Plots shematic representation object class 'mefa', alternatively plots colored logo mefa package.","code":""},{"path":"/reference/mefalogo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"","code":"mefalogo(type = c(\"cont\", \"fill\"), labels = c(\"str\", \"r\"), adj=c(0,0), scale=c(1,1), new = TRUE, cex = 1, ann=FALSE, axes=FALSE, xlim=c(0,10)*scale[1]+adj[1], ylim=c(0,10)*scale[2]+adj[2], ...)"},{"path":"/reference/mefalogo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"type character, \"cont\" drawing black contours, \"fill\" filled polygons. labels character, \"str\" labelling according general structure 'mefa' object, \"r\" places big R letter middle (logo). adj numeric values adjust dimensions polygons. scale numeric value rescale dimensions polygons. new logical, new plot (TRUE) drawn, just adding polygons labels existing one (FALSE). cex numeric, argument scaling labels. ann logical, annotations plot (see par). axes logical, drawing axes (see par). xlim, ylim extreme values x y axes. ... arguments passed function plot, see par. effective new = TRUE.","code":""},{"path":"/reference/mefalogo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"function developed depicting general structure 'mefa' objects. colored logo version can used presentations well.","code":""},{"path":"/reference/mefalogo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefalogo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/mefalogo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Schematic Plot of an Object of Class 'mefa' — mefalogo","text":"","code":"mefalogo()  mefalogo(\"fill\", \"r\")"},{"path":"/reference/mefaweb.html","id":null,"dir":"Reference","previous_headings":"","what":"Open 'mefa' Website — mefaweb","title":"Open 'mefa' Website — mefaweb","text":"Opens 'mefa' website default navigator.","code":""},{"path":"/reference/mefaweb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open 'mefa' Website — mefaweb","text":"","code":"mefaweb()"},{"path":"/reference/mefaweb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Open 'mefa' Website — mefaweb","text":"website contains resources 'mefa' package, please check . Thank !","code":""},{"path":"/reference/mefaweb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Open 'mefa' Website — mefaweb","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/mefaweb.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Open 'mefa' Website — mefaweb","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/mefaweb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open 'mefa' Website — mefaweb","text":"","code":"if (FALSE) { mefaweb() }"},{"path":"/reference/melt.mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"function converts wide formatted 'mefa' object long formatted 'stcs' object. resulting segment column can take various formats.","code":""},{"path":"/reference/melt.mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"","code":"melt(x, ...) # S3 method for mefa melt(x, segm.var = NULL, by.samp = TRUE, raw.out = FALSE, drop.zero = FALSE, ...)"},{"path":"/reference/melt.mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"x object class 'mefa'. segm.var NULL (default) column indices samples (.samp = TRUE) taxa tables (.samp = FALSE). refers one column, interaction taken. NULL, resulting segment column filled \"undefined\". .samp logical, TRUE (default) segm.var taken samples table (x$samp), FALSE segm.var taken taxa table (x$taxa). raw.logical, whether result contain zeros crosstabulated (wide) matrix (TRUE) (FALSE, default). Removing zeros straightforward sparse matrices. empty samples can retained drop.zero = FALSE. drop.zero logical, whether samples zero total count leaved (TRUE) (FALSE, default). ... arguments passed function stcs.","code":""},{"path":"/reference/melt.mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"'mefa' objet original segments segm.var = NULL, function returns original segments. case, raw.= TRUE applied (segments different zero samples, option meaningless). 'mefa' object contains data matrix without dimnames, rows columns numbered melting. Besides goal convert wide format long format, 'mefa' specific implementation also useful, segment coded along long formatted database, can found linked table samples species. way, 'mefa' object new segments can defined easily. melting done vector part tables inside 'mefa' object, must class attribute recognised, use e.g. .factor function (see 'Examples').","code":""},{"path":"/reference/melt.mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"object class 'stsc' raw = FALSE, pure 'data.frame' otherwise (zero count flag applied).","code":""},{"path":"/reference/melt.mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/melt.mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/melt.mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Melt (Convert) an Object of Class 'mefa' Into 'stcs' — melt","text":"","code":"data(dol.count, dol.samp, dol.taxa) x <- mefa(stcs(dol.count), dol.samp, dol.taxa) ## Long format with original segments melt(x) #>     samp        taxa count        segm #> 1    DQ1        amin     2      broken #> 2    DQ1        amin     2       fresh #> 3    DQ1        ctri     2       fresh #> 4    DQ1        dper     2       fresh #> 5    DQ1        estr     1       fresh #> 6    DQ1        vidi     2      broken #> 7    DQ1        vidi     7       fresh #> 8    DQ2        amin     1      broken #> 9    DQ2        amin     3       fresh #> 10   DQ2        apur     1      broken #> 11   DQ2        ctri     7      broken #> 12   DQ2        ctri    13       fresh #> 13   DQ2        dper     1      broken #> 14   DQ2        dper     1       fresh #> 15   DQ2        druf     1      broken #> 16   DQ2        druf     1       fresh #> 17   DQ2        ppyg     1      broken #> 18   DQ2        vidi     4      broken #> 19   DQ2        vidi     5       fresh #> 20   DQ3        amin     1      broken #> 21   DQ3        amin     2       fresh #> 22   DQ3        apur     1       fresh #> 23   DQ3        hobv     3      broken #> 24   DQ3        vidi     2      broken #> 25   DT1        amin     1       fresh #> 26   DT1        dper     1       fresh #> 27   DT1        estr     1      broken #> 28   DT1        hobv     1       fresh #> 29   DT1        mbor     5       fresh #> 30   DT1        pvic     1       fresh #> 31   DT1        bcan     1      broken #> 32   DT2        amin     2       fresh #> 33   DT2        apur     1       fresh #> 34   DT2        bbip     1       fresh #> 35   DT2        clam     2       fresh #> 36   DT2        dper     1       fresh #> 37   DT2        druf     1       fresh #> 38   DT2        estr     1      broken #> 39   DT2        hobv     1       fresh #> 40   DT2        tuni     1       fresh #> 41   DT2        vidi     2       fresh #> 42   DT3        amin     3       fresh #> 43   DT3        bbip     1      broken #> 44   DT3        hobv     1      broken #> 45   DT3        hobv     5       fresh #> 46   DT3        pvic     1       fresh #> 47   DT3        vidi     2       fresh #> 48   LQ1        aacu     1       fresh #> 49   LQ1        amin     1      broken #> 50   LQ1        amin     2       fresh #> 51   LQ1        dper     1      broken #> 52   LQ1        ffau     1      broken #> 53   LQ1        ppyg    13       fresh #> 54   LQ1        ppyg    15      broken #> 55   LQ2        aacu     1       fresh #> 56   LQ2        amin     1      broken #> 57   LQ2        dper     1       fresh #> 58   LQ2        ppyg     5       fresh #> 59   LQ2        ppyg     8      broken #> 60   LQ2        pvic     1      broken #> 61   LQ3        amin     2      broken #> 62   LQ3        apur     1       fresh #> 63   LQ3        bbip     1      broken #> 64   LQ3        ccer     1      broken #> 65   LQ3        dper     1      broken #> 66   LQ3        dper     6       fresh #> 67   LQ3        ppyg    33      broken #> 68   LQ3        ppyg    36       fresh #> 69   LQ3        pvic     1      broken #> 70   LT2        amin     1       fresh #> 71   LT2        pvic     1      broken #> 72   LT3        amin     5       fresh #> 73   LT3        dper     1       fresh #> 74   LT3        pinc     1       fresh #> 75   LT3        pvic     1       fresh #> 76   LT3        tuni     1      broken #> 77   LT3        tuni     1       fresh #> 78   RQ1        amin     1      broken #> 79   RQ1        amin     2       fresh #> 80   RQ1        ccer     1      broken #> 81   RQ1        clam     1       fresh #> 82   RQ1        cort     1       fresh #> 83   RQ1        dper     1      broken #> 84   RQ1        dper     2       fresh #> 85   RQ1        ffau     2      broken #> 86   RQ1        hobv     2       fresh #> 87   RQ1        ogla     1      broken #> 88   RQ1        ppyg     1      broken #> 89   RQ1        ppyg     4       fresh #> 90   RQ1        vidi     1       fresh #> 91   RQ1        vidi     3      broken #> 92   RQ2        amin     7       fresh #> 93   RQ2        bbip     2      broken #> 94   RQ2        bbip     2       fresh #> 95   RQ2        ctri     3      broken #> 96   RQ2        ctri     4       fresh #> 97   RQ2        dbre     1      broken #> 98   RQ2        dper     2      broken #> 99   RQ2        dper     4       fresh #> 100  RQ2        estr     3       fresh #> 101  RQ2        ffau     1      broken #> 102  RQ2        ffau     1       fresh #> 103  RQ2        hobv     9       fresh #> 104  RQ2        mobs     2       fresh #> 105  RQ2        odol     4      broken #> 106  RQ2        odol     9       fresh #> 107  RQ2        ogla     1      broken #> 108  RQ2        ogla     2       fresh #> 109  RQ2        ppyg     9      broken #> 110  RQ2        ppyg    19       fresh #> 111  RQ2        pvic     1      broken #> 112  RQ2        tuni     2       fresh #> 113  RQ2        vcos     2       fresh #> 114  RQ2        vidi     7       fresh #> 115  RQ3        aacu     2      broken #> 116  RQ3        amin     6      broken #> 117  RQ3        amin     7       fresh #> 118  RQ3        bbip     1      broken #> 119  RQ3        ctri     2      broken #> 120  RQ3        ctri     8       fresh #> 121  RQ3        dbre     3       fresh #> 122  RQ3        dper     3      broken #> 123  RQ3        dper     3       fresh #> 124  RQ3        eful     1      broken #> 125  RQ3        eful     1       fresh #> 126  RQ3        ffau     2      broken #> 127  RQ3        hobv     1      broken #> 128  RQ3        hobv     1       fresh #> 129  RQ3        mobs     1      broken #> 130  RQ3        ppyg     4       fresh #> 131  RQ3        ppyg     5      broken #> 132  RQ3        pvic     1      broken #> 133  RQ3        vidi     4      broken #> 134  RQ3        vidi     7       fresh #> 135  RT1        amin     1       fresh #> 136  RT1        amin     3      broken #> 137  RT1        bbip     3      broken #> 138  RT1        ccer     1      broken #> 139  RT1        ccer     1       fresh #> 140  RT1        cort     1      broken #> 141  RT1        dper     1       fresh #> 142  RT1        ffau     2       fresh #> 143  RT1        ffau     5      broken #> 144  RT1        hobv     1       fresh #> 145  RT1        hobv     7      broken #> 146  RT1        iiso     6      broken #> 147  RT1        pinc     1       fresh #> 148  RT1        pinc     2      broken #> 149  RT1        pvic     1       fresh #> 150  RT1        pvic     3      broken #> 151  RT1        tuni     1       fresh #> 152  RT1        tuni     4      broken #> 153  RT2        amin     1      broken #> 154  RT2        apur     2      broken #> 155  RT2        bbip     1       fresh #> 156  RT2        bbip     2      broken #> 157  RT2        cort     1      broken #> 158  RT2        ctri     1       fresh #> 159  RT2        dper     2       fresh #> 160  RT2        estr     1       fresh #> 161  RT2        estr     3      broken #> 162  RT2        ffau     1       fresh #> 163  RT2        ffau    11      broken #> 164  RT2        hobv     1      broken #> 165  RT2        iiso     8      broken #> 166  RT2        pinc     1       fresh #> 167  RT2        pinc     4      broken #> 168  RT2        pvic     1      broken #> 169  RT2        tuni     1       fresh #> 170  RT2        tuni     2      broken #> 171  RT2        vidi     1      broken #> 172  RT2        vidi     1       fresh #> 173  RT2        bcan     1      broken #> 174  RT3        amin     1      broken #> 175  RT3        amin     4       fresh #> 176  RT3        apur     1      broken #> 177  RT3        bbip     5       fresh #> 178  RT3        clam     1      broken #> 179  RT3        ffau     3      broken #> 180  RT3        ffau     3       fresh #> 181  RT3        hobv     1      broken #> 182  RT3        hobv     3       fresh #> 183  RT3        iiso     1       fresh #> 184  RT3        pinc     3      broken #> 185  RT3        pvic     1       fresh #> 186  RT3        pvic     2      broken #> 187  RT3        tuni     1      broken #> 188  WQ1        amin     1      broken #> 189  WQ1        amin     2       fresh #> 190  WQ1        bbip     1      broken #> 191  WQ1        cort     3      broken #> 192  WQ1        iiso     2       fresh #> 193  WQ1        pinc     2       fresh #> 194  WQ1        ppyg    11       fresh #> 195  WQ1        ppyg    20      broken #> 196  WQ1        pvic     1      broken #> 197  WQ1        vidi     2      broken #> 198  WQ1        vidi     2       fresh #> 199  WQ1        bcan     1      broken #> 200  WQ2        amin     1       fresh #> 201  WQ2        amin     3      broken #> 202  WQ2        bbip     1      broken #> 203  WQ2        ccer     1       fresh #> 204  WQ2        dper     5      broken #> 205  WQ2        dper    15       fresh #> 206  WQ2        estr     2      broken #> 207  WQ2        mobs     2      broken #> 208  WQ2        pinc     1       fresh #> 209  WQ2        ppyg    27       fresh #> 210  WQ2        ppyg    29      broken #> 211  WQ2        pvic     1       fresh #> 212  WQ2        tuni     2       fresh #> 213  WQ3        amin     3      broken #> 214  WQ3        amin     7       fresh #> 215  WQ3        bbip     1      broken #> 216  WQ3        bbip     2       fresh #> 217  WQ3        estr     1      broken #> 218  WQ3        ffau     2      broken #> 219  WQ3        pinc     1       fresh #> 220  WQ3        ppyg     2      broken #> 221  WQ3        ppyg     3       fresh #> 222  WQ3        vicr     1       fresh #> 223  WQ3        vidi     1      broken #> 224  WT1        amin     1      broken #> 225  WT1        cort     1       fresh #> 226  WT1        estr     1      broken #> 227  WT1        ffau     1       fresh #> 228  WT1        tuni     1       fresh #> 229  WT2        amin     2       fresh #> 230  WT2        apur     1       fresh #> 231  WT2        bbip     1      broken #> 232  WT2        dper     2       fresh #> 233  WT3        amin     4      broken #> 234  WT3        ffau     1      broken #> 235  WT3        vidi     1       fresh #> 236  LT1 zero.pseudo     0 zero.pseudo ## Long format with undefined segment melt(as.mefa(x, segment = FALSE)) #>     samp        taxa count        segm #> 1    DQ1        amin     4   undefined #> 2    DQ1        ctri     2   undefined #> 3    DQ1        dper     2   undefined #> 4    DQ1        estr     1   undefined #> 5    DQ1        vidi     9   undefined #> 6    DQ2        amin     4   undefined #> 7    DQ2        apur     1   undefined #> 8    DQ2        ctri    20   undefined #> 9    DQ2        dper     2   undefined #> 10   DQ2        druf     2   undefined #> 11   DQ2        ppyg     1   undefined #> 12   DQ2        vidi     9   undefined #> 13   DQ3        amin     3   undefined #> 14   DQ3        apur     1   undefined #> 15   DQ3        hobv     3   undefined #> 16   DQ3        vidi     2   undefined #> 17   DT1        amin     1   undefined #> 18   DT1        bcan     1   undefined #> 19   DT1        dper     1   undefined #> 20   DT1        estr     1   undefined #> 21   DT1        hobv     1   undefined #> 22   DT1        mbor     5   undefined #> 23   DT1        pvic     1   undefined #> 24   DT2        amin     2   undefined #> 25   DT2        apur     1   undefined #> 26   DT2        bbip     1   undefined #> 27   DT2        clam     2   undefined #> 28   DT2        dper     1   undefined #> 29   DT2        druf     1   undefined #> 30   DT2        estr     1   undefined #> 31   DT2        hobv     1   undefined #> 32   DT2        tuni     1   undefined #> 33   DT2        vidi     2   undefined #> 34   DT3        amin     3   undefined #> 35   DT3        bbip     1   undefined #> 36   DT3        hobv     6   undefined #> 37   DT3        pvic     1   undefined #> 38   DT3        vidi     2   undefined #> 39   LQ1        aacu     1   undefined #> 40   LQ1        amin     3   undefined #> 41   LQ1        dper     1   undefined #> 42   LQ1        ffau     1   undefined #> 43   LQ1        ppyg    28   undefined #> 44   LQ2        aacu     1   undefined #> 45   LQ2        amin     1   undefined #> 46   LQ2        dper     1   undefined #> 47   LQ2        ppyg    13   undefined #> 48   LQ2        pvic     1   undefined #> 49   LQ3        amin     2   undefined #> 50   LQ3        apur     1   undefined #> 51   LQ3        bbip     1   undefined #> 52   LQ3        ccer     1   undefined #> 53   LQ3        dper     7   undefined #> 54   LQ3        ppyg    69   undefined #> 55   LQ3        pvic     1   undefined #> 56   LT1 zero.pseudo     0 zero.pseudo #> 57   LT2        amin     1   undefined #> 58   LT2        pvic     1   undefined #> 59   LT3        amin     5   undefined #> 60   LT3        dper     1   undefined #> 61   LT3        pinc     1   undefined #> 62   LT3        pvic     1   undefined #> 63   LT3        tuni     2   undefined #> 64   RQ1        amin     3   undefined #> 65   RQ1        ccer     1   undefined #> 66   RQ1        clam     1   undefined #> 67   RQ1        cort     1   undefined #> 68   RQ1        dper     3   undefined #> 69   RQ1        ffau     2   undefined #> 70   RQ1        hobv     2   undefined #> 71   RQ1        ogla     1   undefined #> 72   RQ1        ppyg     5   undefined #> 73   RQ1        vidi     4   undefined #> 74   RQ2        amin     7   undefined #> 75   RQ2        bbip     4   undefined #> 76   RQ2        ctri     7   undefined #> 77   RQ2        dbre     1   undefined #> 78   RQ2        dper     6   undefined #> 79   RQ2        estr     3   undefined #> 80   RQ2        ffau     2   undefined #> 81   RQ2        hobv     9   undefined #> 82   RQ2        mobs     2   undefined #> 83   RQ2        odol    13   undefined #> 84   RQ2        ogla     3   undefined #> 85   RQ2        ppyg    28   undefined #> 86   RQ2        pvic     1   undefined #> 87   RQ2        tuni     2   undefined #> 88   RQ2        vcos     2   undefined #> 89   RQ2        vidi     7   undefined #> 90   RQ3        aacu     2   undefined #> 91   RQ3        amin    13   undefined #> 92   RQ3        bbip     1   undefined #> 93   RQ3        ctri    10   undefined #> 94   RQ3        dbre     3   undefined #> 95   RQ3        dper     6   undefined #> 96   RQ3        eful     2   undefined #> 97   RQ3        ffau     2   undefined #> 98   RQ3        hobv     2   undefined #> 99   RQ3        mobs     1   undefined #> 100  RQ3        ppyg     9   undefined #> 101  RQ3        pvic     1   undefined #> 102  RQ3        vidi    11   undefined #> 103  RT1        amin     4   undefined #> 104  RT1        bbip     3   undefined #> 105  RT1        ccer     2   undefined #> 106  RT1        cort     1   undefined #> 107  RT1        dper     1   undefined #> 108  RT1        ffau     7   undefined #> 109  RT1        hobv     8   undefined #> 110  RT1        iiso     6   undefined #> 111  RT1        pinc     3   undefined #> 112  RT1        pvic     4   undefined #> 113  RT1        tuni     5   undefined #> 114  RT2        amin     1   undefined #> 115  RT2        apur     2   undefined #> 116  RT2        bbip     3   undefined #> 117  RT2        bcan     1   undefined #> 118  RT2        cort     1   undefined #> 119  RT2        ctri     1   undefined #> 120  RT2        dper     2   undefined #> 121  RT2        estr     4   undefined #> 122  RT2        ffau    12   undefined #> 123  RT2        hobv     1   undefined #> 124  RT2        iiso     8   undefined #> 125  RT2        pinc     5   undefined #> 126  RT2        pvic     1   undefined #> 127  RT2        tuni     3   undefined #> 128  RT2        vidi     2   undefined #> 129  RT3        amin     5   undefined #> 130  RT3        apur     1   undefined #> 131  RT3        bbip     5   undefined #> 132  RT3        clam     1   undefined #> 133  RT3        ffau     6   undefined #> 134  RT3        hobv     4   undefined #> 135  RT3        iiso     1   undefined #> 136  RT3        pinc     3   undefined #> 137  RT3        pvic     3   undefined #> 138  RT3        tuni     1   undefined #> 139  WQ1        amin     3   undefined #> 140  WQ1        bbip     1   undefined #> 141  WQ1        bcan     1   undefined #> 142  WQ1        cort     3   undefined #> 143  WQ1        iiso     2   undefined #> 144  WQ1        pinc     2   undefined #> 145  WQ1        ppyg    31   undefined #> 146  WQ1        pvic     1   undefined #> 147  WQ1        vidi     4   undefined #> 148  WQ2        amin     4   undefined #> 149  WQ2        bbip     1   undefined #> 150  WQ2        ccer     1   undefined #> 151  WQ2        dper    20   undefined #> 152  WQ2        estr     2   undefined #> 153  WQ2        mobs     2   undefined #> 154  WQ2        pinc     1   undefined #> 155  WQ2        ppyg    56   undefined #> 156  WQ2        pvic     1   undefined #> 157  WQ2        tuni     2   undefined #> 158  WQ3        amin    10   undefined #> 159  WQ3        bbip     3   undefined #> 160  WQ3        estr     1   undefined #> 161  WQ3        ffau     2   undefined #> 162  WQ3        pinc     1   undefined #> 163  WQ3        ppyg     5   undefined #> 164  WQ3        vicr     1   undefined #> 165  WQ3        vidi     1   undefined #> 166  WT1        amin     1   undefined #> 167  WT1        cort     1   undefined #> 168  WT1        estr     1   undefined #> 169  WT1        ffau     1   undefined #> 170  WT1        tuni     1   undefined #> 171  WT2        amin     2   undefined #> 172  WT2        apur     1   undefined #> 173  WT2        bbip     1   undefined #> 174  WT2        dper     2   undefined #> 175  WT3        amin     4   undefined #> 176  WT3        ffau     1   undefined #> 177  WT3        vidi     1   undefined ## These two are identical melt(x, \"microhab\") #>     samp        taxa count        segm #> 1    DQ1        amin     4   dead.wood #> 2    DQ1        ctri     2   dead.wood #> 3    DQ1        dper     2   dead.wood #> 4    DQ1        estr     1   dead.wood #> 5    DQ1        vidi     9   dead.wood #> 6    DQ2        amin     4   dead.wood #> 7    DQ2        apur     1   dead.wood #> 8    DQ2        ctri    20   dead.wood #> 9    DQ2        dper     2   dead.wood #> 10   DQ2        druf     2   dead.wood #> 11   DQ2        ppyg     1   dead.wood #> 12   DQ2        vidi     9   dead.wood #> 13   DQ3        amin     3   dead.wood #> 14   DQ3        apur     1   dead.wood #> 15   DQ3        hobv     3   dead.wood #> 16   DQ3        vidi     2   dead.wood #> 17   DT1        amin     1   dead.wood #> 18   DT1        bcan     1   dead.wood #> 19   DT1        dper     1   dead.wood #> 20   DT1        estr     1   dead.wood #> 21   DT1        hobv     1   dead.wood #> 22   DT1        mbor     5   dead.wood #> 23   DT1        pvic     1   dead.wood #> 24   DT2        amin     2   dead.wood #> 25   DT2        apur     1   dead.wood #> 26   DT2        bbip     1   dead.wood #> 27   DT2        clam     2   dead.wood #> 28   DT2        dper     1   dead.wood #> 29   DT2        druf     1   dead.wood #> 30   DT2        estr     1   dead.wood #> 31   DT2        hobv     1   dead.wood #> 32   DT2        tuni     1   dead.wood #> 33   DT2        vidi     2   dead.wood #> 34   DT3        amin     3   dead.wood #> 35   DT3        bbip     1   dead.wood #> 36   DT3        hobv     6   dead.wood #> 37   DT3        pvic     1   dead.wood #> 38   DT3        vidi     2   dead.wood #> 39   LQ1        aacu     1      litter #> 40   LQ1        amin     3      litter #> 41   LQ1        dper     1      litter #> 42   LQ1        ffau     1      litter #> 43   LQ1        ppyg    28      litter #> 44   LQ2        aacu     1      litter #> 45   LQ2        amin     1      litter #> 46   LQ2        dper     1      litter #> 47   LQ2        ppyg    13      litter #> 48   LQ2        pvic     1      litter #> 49   LQ3        amin     2      litter #> 50   LQ3        apur     1      litter #> 51   LQ3        bbip     1      litter #> 52   LQ3        ccer     1      litter #> 53   LQ3        dper     7      litter #> 54   LQ3        ppyg    69      litter #> 55   LQ3        pvic     1      litter #> 56   LT1 zero.pseudo     0 zero.pseudo #> 57   LT2        amin     1      litter #> 58   LT2        pvic     1      litter #> 59   LT3        amin     5      litter #> 60   LT3        dper     1      litter #> 61   LT3        pinc     1      litter #> 62   LT3        pvic     1      litter #> 63   LT3        tuni     2      litter #> 64   RQ1        amin     3        rock #> 65   RQ1        ccer     1        rock #> 66   RQ1        clam     1        rock #> 67   RQ1        cort     1        rock #> 68   RQ1        dper     3        rock #> 69   RQ1        ffau     2        rock #> 70   RQ1        hobv     2        rock #> 71   RQ1        ogla     1        rock #> 72   RQ1        ppyg     5        rock #> 73   RQ1        vidi     4        rock #> 74   RQ2        amin     7        rock #> 75   RQ2        bbip     4        rock #> 76   RQ2        ctri     7        rock #> 77   RQ2        dbre     1        rock #> 78   RQ2        dper     6        rock #> 79   RQ2        estr     3        rock #> 80   RQ2        ffau     2        rock #> 81   RQ2        hobv     9        rock #> 82   RQ2        mobs     2        rock #> 83   RQ2        odol    13        rock #> 84   RQ2        ogla     3        rock #> 85   RQ2        ppyg    28        rock #> 86   RQ2        pvic     1        rock #> 87   RQ2        tuni     2        rock #> 88   RQ2        vcos     2        rock #> 89   RQ2        vidi     7        rock #> 90   RQ3        aacu     2        rock #> 91   RQ3        amin    13        rock #> 92   RQ3        bbip     1        rock #> 93   RQ3        ctri    10        rock #> 94   RQ3        dbre     3        rock #> 95   RQ3        dper     6        rock #> 96   RQ3        eful     2        rock #> 97   RQ3        ffau     2        rock #> 98   RQ3        hobv     2        rock #> 99   RQ3        mobs     1        rock #> 100  RQ3        ppyg     9        rock #> 101  RQ3        pvic     1        rock #> 102  RQ3        vidi    11        rock #> 103  RT1        amin     4        rock #> 104  RT1        bbip     3        rock #> 105  RT1        ccer     2        rock #> 106  RT1        cort     1        rock #> 107  RT1        dper     1        rock #> 108  RT1        ffau     7        rock #> 109  RT1        hobv     8        rock #> 110  RT1        iiso     6        rock #> 111  RT1        pinc     3        rock #> 112  RT1        pvic     4        rock #> 113  RT1        tuni     5        rock #> 114  RT2        amin     1        rock #> 115  RT2        apur     2        rock #> 116  RT2        bbip     3        rock #> 117  RT2        bcan     1        rock #> 118  RT2        cort     1        rock #> 119  RT2        ctri     1        rock #> 120  RT2        dper     2        rock #> 121  RT2        estr     4        rock #> 122  RT2        ffau    12        rock #> 123  RT2        hobv     1        rock #> 124  RT2        iiso     8        rock #> 125  RT2        pinc     5        rock #> 126  RT2        pvic     1        rock #> 127  RT2        tuni     3        rock #> 128  RT2        vidi     2        rock #> 129  RT3        amin     5        rock #> 130  RT3        apur     1        rock #> 131  RT3        bbip     5        rock #> 132  RT3        clam     1        rock #> 133  RT3        ffau     6        rock #> 134  RT3        hobv     4        rock #> 135  RT3        iiso     1        rock #> 136  RT3        pinc     3        rock #> 137  RT3        pvic     3        rock #> 138  RT3        tuni     1        rock #> 139  WQ1        amin     3   live.wood #> 140  WQ1        bbip     1   live.wood #> 141  WQ1        bcan     1   live.wood #> 142  WQ1        cort     3   live.wood #> 143  WQ1        iiso     2   live.wood #> 144  WQ1        pinc     2   live.wood #> 145  WQ1        ppyg    31   live.wood #> 146  WQ1        pvic     1   live.wood #> 147  WQ1        vidi     4   live.wood #> 148  WQ2        amin     4   live.wood #> 149  WQ2        bbip     1   live.wood #> 150  WQ2        ccer     1   live.wood #> 151  WQ2        dper    20   live.wood #> 152  WQ2        estr     2   live.wood #> 153  WQ2        mobs     2   live.wood #> 154  WQ2        pinc     1   live.wood #> 155  WQ2        ppyg    56   live.wood #> 156  WQ2        pvic     1   live.wood #> 157  WQ2        tuni     2   live.wood #> 158  WQ3        amin    10   live.wood #> 159  WQ3        bbip     3   live.wood #> 160  WQ3        estr     1   live.wood #> 161  WQ3        ffau     2   live.wood #> 162  WQ3        pinc     1   live.wood #> 163  WQ3        ppyg     5   live.wood #> 164  WQ3        vicr     1   live.wood #> 165  WQ3        vidi     1   live.wood #> 166  WT1        amin     1   live.wood #> 167  WT1        cort     1   live.wood #> 168  WT1        estr     1   live.wood #> 169  WT1        ffau     1   live.wood #> 170  WT1        tuni     1   live.wood #> 171  WT2        amin     2   live.wood #> 172  WT2        apur     1   live.wood #> 173  WT2        bbip     1   live.wood #> 174  WT2        dper     2   live.wood #> 175  WT3        amin     4   live.wood #> 176  WT3        ffau     1   live.wood #> 177  WT3        vidi     1   live.wood melt(x, x$samp$microhab) ## this is a factor #>     samp        taxa count        segm #> 1    DQ1        amin     4   dead.wood #> 2    DQ1        ctri     2   dead.wood #> 3    DQ1        dper     2   dead.wood #> 4    DQ1        estr     1   dead.wood #> 5    DQ1        vidi     9   dead.wood #> 6    DQ2        amin     4   dead.wood #> 7    DQ2        apur     1   dead.wood #> 8    DQ2        ctri    20   dead.wood #> 9    DQ2        dper     2   dead.wood #> 10   DQ2        druf     2   dead.wood #> 11   DQ2        ppyg     1   dead.wood #> 12   DQ2        vidi     9   dead.wood #> 13   DQ3        amin     3   dead.wood #> 14   DQ3        apur     1   dead.wood #> 15   DQ3        hobv     3   dead.wood #> 16   DQ3        vidi     2   dead.wood #> 17   DT1        amin     1   dead.wood #> 18   DT1        bcan     1   dead.wood #> 19   DT1        dper     1   dead.wood #> 20   DT1        estr     1   dead.wood #> 21   DT1        hobv     1   dead.wood #> 22   DT1        mbor     5   dead.wood #> 23   DT1        pvic     1   dead.wood #> 24   DT2        amin     2   dead.wood #> 25   DT2        apur     1   dead.wood #> 26   DT2        bbip     1   dead.wood #> 27   DT2        clam     2   dead.wood #> 28   DT2        dper     1   dead.wood #> 29   DT2        druf     1   dead.wood #> 30   DT2        estr     1   dead.wood #> 31   DT2        hobv     1   dead.wood #> 32   DT2        tuni     1   dead.wood #> 33   DT2        vidi     2   dead.wood #> 34   DT3        amin     3   dead.wood #> 35   DT3        bbip     1   dead.wood #> 36   DT3        hobv     6   dead.wood #> 37   DT3        pvic     1   dead.wood #> 38   DT3        vidi     2   dead.wood #> 39   LQ1        aacu     1      litter #> 40   LQ1        amin     3      litter #> 41   LQ1        dper     1      litter #> 42   LQ1        ffau     1      litter #> 43   LQ1        ppyg    28      litter #> 44   LQ2        aacu     1      litter #> 45   LQ2        amin     1      litter #> 46   LQ2        dper     1      litter #> 47   LQ2        ppyg    13      litter #> 48   LQ2        pvic     1      litter #> 49   LQ3        amin     2      litter #> 50   LQ3        apur     1      litter #> 51   LQ3        bbip     1      litter #> 52   LQ3        ccer     1      litter #> 53   LQ3        dper     7      litter #> 54   LQ3        ppyg    69      litter #> 55   LQ3        pvic     1      litter #> 56   LT1 zero.pseudo     0 zero.pseudo #> 57   LT2        amin     1      litter #> 58   LT2        pvic     1      litter #> 59   LT3        amin     5      litter #> 60   LT3        dper     1      litter #> 61   LT3        pinc     1      litter #> 62   LT3        pvic     1      litter #> 63   LT3        tuni     2      litter #> 64   RQ1        amin     3        rock #> 65   RQ1        ccer     1        rock #> 66   RQ1        clam     1        rock #> 67   RQ1        cort     1        rock #> 68   RQ1        dper     3        rock #> 69   RQ1        ffau     2        rock #> 70   RQ1        hobv     2        rock #> 71   RQ1        ogla     1        rock #> 72   RQ1        ppyg     5        rock #> 73   RQ1        vidi     4        rock #> 74   RQ2        amin     7        rock #> 75   RQ2        bbip     4        rock #> 76   RQ2        ctri     7        rock #> 77   RQ2        dbre     1        rock #> 78   RQ2        dper     6        rock #> 79   RQ2        estr     3        rock #> 80   RQ2        ffau     2        rock #> 81   RQ2        hobv     9        rock #> 82   RQ2        mobs     2        rock #> 83   RQ2        odol    13        rock #> 84   RQ2        ogla     3        rock #> 85   RQ2        ppyg    28        rock #> 86   RQ2        pvic     1        rock #> 87   RQ2        tuni     2        rock #> 88   RQ2        vcos     2        rock #> 89   RQ2        vidi     7        rock #> 90   RQ3        aacu     2        rock #> 91   RQ3        amin    13        rock #> 92   RQ3        bbip     1        rock #> 93   RQ3        ctri    10        rock #> 94   RQ3        dbre     3        rock #> 95   RQ3        dper     6        rock #> 96   RQ3        eful     2        rock #> 97   RQ3        ffau     2        rock #> 98   RQ3        hobv     2        rock #> 99   RQ3        mobs     1        rock #> 100  RQ3        ppyg     9        rock #> 101  RQ3        pvic     1        rock #> 102  RQ3        vidi    11        rock #> 103  RT1        amin     4        rock #> 104  RT1        bbip     3        rock #> 105  RT1        ccer     2        rock #> 106  RT1        cort     1        rock #> 107  RT1        dper     1        rock #> 108  RT1        ffau     7        rock #> 109  RT1        hobv     8        rock #> 110  RT1        iiso     6        rock #> 111  RT1        pinc     3        rock #> 112  RT1        pvic     4        rock #> 113  RT1        tuni     5        rock #> 114  RT2        amin     1        rock #> 115  RT2        apur     2        rock #> 116  RT2        bbip     3        rock #> 117  RT2        bcan     1        rock #> 118  RT2        cort     1        rock #> 119  RT2        ctri     1        rock #> 120  RT2        dper     2        rock #> 121  RT2        estr     4        rock #> 122  RT2        ffau    12        rock #> 123  RT2        hobv     1        rock #> 124  RT2        iiso     8        rock #> 125  RT2        pinc     5        rock #> 126  RT2        pvic     1        rock #> 127  RT2        tuni     3        rock #> 128  RT2        vidi     2        rock #> 129  RT3        amin     5        rock #> 130  RT3        apur     1        rock #> 131  RT3        bbip     5        rock #> 132  RT3        clam     1        rock #> 133  RT3        ffau     6        rock #> 134  RT3        hobv     4        rock #> 135  RT3        iiso     1        rock #> 136  RT3        pinc     3        rock #> 137  RT3        pvic     3        rock #> 138  RT3        tuni     1        rock #> 139  WQ1        amin     3   live.wood #> 140  WQ1        bbip     1   live.wood #> 141  WQ1        bcan     1   live.wood #> 142  WQ1        cort     3   live.wood #> 143  WQ1        iiso     2   live.wood #> 144  WQ1        pinc     2   live.wood #> 145  WQ1        ppyg    31   live.wood #> 146  WQ1        pvic     1   live.wood #> 147  WQ1        vidi     4   live.wood #> 148  WQ2        amin     4   live.wood #> 149  WQ2        bbip     1   live.wood #> 150  WQ2        ccer     1   live.wood #> 151  WQ2        dper    20   live.wood #> 152  WQ2        estr     2   live.wood #> 153  WQ2        mobs     2   live.wood #> 154  WQ2        pinc     1   live.wood #> 155  WQ2        ppyg    56   live.wood #> 156  WQ2        pvic     1   live.wood #> 157  WQ2        tuni     2   live.wood #> 158  WQ3        amin    10   live.wood #> 159  WQ3        bbip     3   live.wood #> 160  WQ3        estr     1   live.wood #> 161  WQ3        ffau     2   live.wood #> 162  WQ3        pinc     1   live.wood #> 163  WQ3        ppyg     5   live.wood #> 164  WQ3        vicr     1   live.wood #> 165  WQ3        vidi     1   live.wood #> 166  WT1        amin     1   live.wood #> 167  WT1        cort     1   live.wood #> 168  WT1        estr     1   live.wood #> 169  WT1        ffau     1   live.wood #> 170  WT1        tuni     1   live.wood #> 171  WT2        amin     2   live.wood #> 172  WT2        apur     1   live.wood #> 173  WT2        bbip     1   live.wood #> 174  WT2        dper     2   live.wood #> 175  WT3        amin     4   live.wood #> 176  WT3        ffau     1   live.wood #> 177  WT3        vidi     1   live.wood ## Using a simple vector as factor melt(x, as.factor(rbinom(dim(x)[1], 1, 0.5))) #>     samp        taxa count        segm #> 1    DQ1        amin     4           0 #> 2    DQ1        ctri     2           0 #> 3    DQ1        dper     2           0 #> 4    DQ1        estr     1           0 #> 5    DQ1        vidi     9           0 #> 6    DQ2        amin     4           0 #> 7    DQ2        apur     1           0 #> 8    DQ2        ctri    20           0 #> 9    DQ2        dper     2           0 #> 10   DQ2        druf     2           0 #> 11   DQ2        ppyg     1           0 #> 12   DQ2        vidi     9           0 #> 13   DQ3        amin     3           0 #> 14   DQ3        apur     1           0 #> 15   DQ3        hobv     3           0 #> 16   DQ3        vidi     2           0 #> 17   DT1        amin     1           1 #> 18   DT1        bcan     1           1 #> 19   DT1        dper     1           1 #> 20   DT1        estr     1           1 #> 21   DT1        hobv     1           1 #> 22   DT1        mbor     5           1 #> 23   DT1        pvic     1           1 #> 24   DT2        amin     2           1 #> 25   DT2        apur     1           1 #> 26   DT2        bbip     1           1 #> 27   DT2        clam     2           1 #> 28   DT2        dper     1           1 #> 29   DT2        druf     1           1 #> 30   DT2        estr     1           1 #> 31   DT2        hobv     1           1 #> 32   DT2        tuni     1           1 #> 33   DT2        vidi     2           1 #> 34   DT3        amin     3           1 #> 35   DT3        bbip     1           1 #> 36   DT3        hobv     6           1 #> 37   DT3        pvic     1           1 #> 38   DT3        vidi     2           1 #> 39   LQ1        aacu     1           1 #> 40   LQ1        amin     3           1 #> 41   LQ1        dper     1           1 #> 42   LQ1        ffau     1           1 #> 43   LQ1        ppyg    28           1 #> 44   LQ2        aacu     1           1 #> 45   LQ2        amin     1           1 #> 46   LQ2        dper     1           1 #> 47   LQ2        ppyg    13           1 #> 48   LQ2        pvic     1           1 #> 49   LQ3        amin     2           1 #> 50   LQ3        apur     1           1 #> 51   LQ3        bbip     1           1 #> 52   LQ3        ccer     1           1 #> 53   LQ3        dper     7           1 #> 54   LQ3        ppyg    69           1 #> 55   LQ3        pvic     1           1 #> 56   LT1 zero.pseudo     0 zero.pseudo #> 57   LT2        amin     1           0 #> 58   LT2        pvic     1           0 #> 59   LT3        amin     5           1 #> 60   LT3        dper     1           1 #> 61   LT3        pinc     1           1 #> 62   LT3        pvic     1           1 #> 63   LT3        tuni     2           1 #> 64   RQ1        amin     3           0 #> 65   RQ1        ccer     1           0 #> 66   RQ1        clam     1           0 #> 67   RQ1        cort     1           0 #> 68   RQ1        dper     3           0 #> 69   RQ1        ffau     2           0 #> 70   RQ1        hobv     2           0 #> 71   RQ1        ogla     1           0 #> 72   RQ1        ppyg     5           0 #> 73   RQ1        vidi     4           0 #> 74   RQ2        amin     7           1 #> 75   RQ2        bbip     4           1 #> 76   RQ2        ctri     7           1 #> 77   RQ2        dbre     1           1 #> 78   RQ2        dper     6           1 #> 79   RQ2        estr     3           1 #> 80   RQ2        ffau     2           1 #> 81   RQ2        hobv     9           1 #> 82   RQ2        mobs     2           1 #> 83   RQ2        odol    13           1 #> 84   RQ2        ogla     3           1 #> 85   RQ2        ppyg    28           1 #> 86   RQ2        pvic     1           1 #> 87   RQ2        tuni     2           1 #> 88   RQ2        vcos     2           1 #> 89   RQ2        vidi     7           1 #> 90   RQ3        aacu     2           1 #> 91   RQ3        amin    13           1 #> 92   RQ3        bbip     1           1 #> 93   RQ3        ctri    10           1 #> 94   RQ3        dbre     3           1 #> 95   RQ3        dper     6           1 #> 96   RQ3        eful     2           1 #> 97   RQ3        ffau     2           1 #> 98   RQ3        hobv     2           1 #> 99   RQ3        mobs     1           1 #> 100  RQ3        ppyg     9           1 #> 101  RQ3        pvic     1           1 #> 102  RQ3        vidi    11           1 #> 103  RT1        amin     4           0 #> 104  RT1        bbip     3           0 #> 105  RT1        ccer     2           0 #> 106  RT1        cort     1           0 #> 107  RT1        dper     1           0 #> 108  RT1        ffau     7           0 #> 109  RT1        hobv     8           0 #> 110  RT1        iiso     6           0 #> 111  RT1        pinc     3           0 #> 112  RT1        pvic     4           0 #> 113  RT1        tuni     5           0 #> 114  RT2        amin     1           1 #> 115  RT2        apur     2           1 #> 116  RT2        bbip     3           1 #> 117  RT2        bcan     1           1 #> 118  RT2        cort     1           1 #> 119  RT2        ctri     1           1 #> 120  RT2        dper     2           1 #> 121  RT2        estr     4           1 #> 122  RT2        ffau    12           1 #> 123  RT2        hobv     1           1 #> 124  RT2        iiso     8           1 #> 125  RT2        pinc     5           1 #> 126  RT2        pvic     1           1 #> 127  RT2        tuni     3           1 #> 128  RT2        vidi     2           1 #> 129  RT3        amin     5           0 #> 130  RT3        apur     1           0 #> 131  RT3        bbip     5           0 #> 132  RT3        clam     1           0 #> 133  RT3        ffau     6           0 #> 134  RT3        hobv     4           0 #> 135  RT3        iiso     1           0 #> 136  RT3        pinc     3           0 #> 137  RT3        pvic     3           0 #> 138  RT3        tuni     1           0 #> 139  WQ1        amin     3           1 #> 140  WQ1        bbip     1           1 #> 141  WQ1        bcan     1           1 #> 142  WQ1        cort     3           1 #> 143  WQ1        iiso     2           1 #> 144  WQ1        pinc     2           1 #> 145  WQ1        ppyg    31           1 #> 146  WQ1        pvic     1           1 #> 147  WQ1        vidi     4           1 #> 148  WQ2        amin     4           0 #> 149  WQ2        bbip     1           0 #> 150  WQ2        ccer     1           0 #> 151  WQ2        dper    20           0 #> 152  WQ2        estr     2           0 #> 153  WQ2        mobs     2           0 #> 154  WQ2        pinc     1           0 #> 155  WQ2        ppyg    56           0 #> 156  WQ2        pvic     1           0 #> 157  WQ2        tuni     2           0 #> 158  WQ3        amin    10           1 #> 159  WQ3        bbip     3           1 #> 160  WQ3        estr     1           1 #> 161  WQ3        ffau     2           1 #> 162  WQ3        pinc     1           1 #> 163  WQ3        ppyg     5           1 #> 164  WQ3        vicr     1           1 #> 165  WQ3        vidi     1           1 #> 166  WT1        amin     1           1 #> 167  WT1        cort     1           1 #> 168  WT1        estr     1           1 #> 169  WT1        ffau     1           1 #> 170  WT1        tuni     1           1 #> 171  WT2        amin     2           1 #> 172  WT2        apur     1           1 #> 173  WT2        bbip     1           1 #> 174  WT2        dper     2           1 #> 175  WT3        amin     4           0 #> 176  WT3        ffau     1           0 #> 177  WT3        vidi     1           0 ## Interaction melt(x, c(\"method\", \"microhab\")) #>     samp        taxa count              segm #> 1    DQ1        amin     4 quadrat.dead.wood #> 2    DQ1        ctri     2 quadrat.dead.wood #> 3    DQ1        dper     2 quadrat.dead.wood #> 4    DQ1        estr     1 quadrat.dead.wood #> 5    DQ1        vidi     9 quadrat.dead.wood #> 6    DQ2        amin     4 quadrat.dead.wood #> 7    DQ2        apur     1 quadrat.dead.wood #> 8    DQ2        ctri    20 quadrat.dead.wood #> 9    DQ2        dper     2 quadrat.dead.wood #> 10   DQ2        druf     2 quadrat.dead.wood #> 11   DQ2        ppyg     1 quadrat.dead.wood #> 12   DQ2        vidi     9 quadrat.dead.wood #> 13   DQ3        amin     3 quadrat.dead.wood #> 14   DQ3        apur     1 quadrat.dead.wood #> 15   DQ3        hobv     3 quadrat.dead.wood #> 16   DQ3        vidi     2 quadrat.dead.wood #> 17   DT1        amin     1    time.dead.wood #> 18   DT1        bcan     1    time.dead.wood #> 19   DT1        dper     1    time.dead.wood #> 20   DT1        estr     1    time.dead.wood #> 21   DT1        hobv     1    time.dead.wood #> 22   DT1        mbor     5    time.dead.wood #> 23   DT1        pvic     1    time.dead.wood #> 24   DT2        amin     2    time.dead.wood #> 25   DT2        apur     1    time.dead.wood #> 26   DT2        bbip     1    time.dead.wood #> 27   DT2        clam     2    time.dead.wood #> 28   DT2        dper     1    time.dead.wood #> 29   DT2        druf     1    time.dead.wood #> 30   DT2        estr     1    time.dead.wood #> 31   DT2        hobv     1    time.dead.wood #> 32   DT2        tuni     1    time.dead.wood #> 33   DT2        vidi     2    time.dead.wood #> 34   DT3        amin     3    time.dead.wood #> 35   DT3        bbip     1    time.dead.wood #> 36   DT3        hobv     6    time.dead.wood #> 37   DT3        pvic     1    time.dead.wood #> 38   DT3        vidi     2    time.dead.wood #> 39   LQ1        aacu     1    quadrat.litter #> 40   LQ1        amin     3    quadrat.litter #> 41   LQ1        dper     1    quadrat.litter #> 42   LQ1        ffau     1    quadrat.litter #> 43   LQ1        ppyg    28    quadrat.litter #> 44   LQ2        aacu     1    quadrat.litter #> 45   LQ2        amin     1    quadrat.litter #> 46   LQ2        dper     1    quadrat.litter #> 47   LQ2        ppyg    13    quadrat.litter #> 48   LQ2        pvic     1    quadrat.litter #> 49   LQ3        amin     2    quadrat.litter #> 50   LQ3        apur     1    quadrat.litter #> 51   LQ3        bbip     1    quadrat.litter #> 52   LQ3        ccer     1    quadrat.litter #> 53   LQ3        dper     7    quadrat.litter #> 54   LQ3        ppyg    69    quadrat.litter #> 55   LQ3        pvic     1    quadrat.litter #> 56   LT1 zero.pseudo     0       zero.pseudo #> 57   LT2        amin     1       time.litter #> 58   LT2        pvic     1       time.litter #> 59   LT3        amin     5       time.litter #> 60   LT3        dper     1       time.litter #> 61   LT3        pinc     1       time.litter #> 62   LT3        pvic     1       time.litter #> 63   LT3        tuni     2       time.litter #> 64   RQ1        amin     3      quadrat.rock #> 65   RQ1        ccer     1      quadrat.rock #> 66   RQ1        clam     1      quadrat.rock #> 67   RQ1        cort     1      quadrat.rock #> 68   RQ1        dper     3      quadrat.rock #> 69   RQ1        ffau     2      quadrat.rock #> 70   RQ1        hobv     2      quadrat.rock #> 71   RQ1        ogla     1      quadrat.rock #> 72   RQ1        ppyg     5      quadrat.rock #> 73   RQ1        vidi     4      quadrat.rock #> 74   RQ2        amin     7      quadrat.rock #> 75   RQ2        bbip     4      quadrat.rock #> 76   RQ2        ctri     7      quadrat.rock #> 77   RQ2        dbre     1      quadrat.rock #> 78   RQ2        dper     6      quadrat.rock #> 79   RQ2        estr     3      quadrat.rock #> 80   RQ2        ffau     2      quadrat.rock #> 81   RQ2        hobv     9      quadrat.rock #> 82   RQ2        mobs     2      quadrat.rock #> 83   RQ2        odol    13      quadrat.rock #> 84   RQ2        ogla     3      quadrat.rock #> 85   RQ2        ppyg    28      quadrat.rock #> 86   RQ2        pvic     1      quadrat.rock #> 87   RQ2        tuni     2      quadrat.rock #> 88   RQ2        vcos     2      quadrat.rock #> 89   RQ2        vidi     7      quadrat.rock #> 90   RQ3        aacu     2      quadrat.rock #> 91   RQ3        amin    13      quadrat.rock #> 92   RQ3        bbip     1      quadrat.rock #> 93   RQ3        ctri    10      quadrat.rock #> 94   RQ3        dbre     3      quadrat.rock #> 95   RQ3        dper     6      quadrat.rock #> 96   RQ3        eful     2      quadrat.rock #> 97   RQ3        ffau     2      quadrat.rock #> 98   RQ3        hobv     2      quadrat.rock #> 99   RQ3        mobs     1      quadrat.rock #> 100  RQ3        ppyg     9      quadrat.rock #> 101  RQ3        pvic     1      quadrat.rock #> 102  RQ3        vidi    11      quadrat.rock #> 103  RT1        amin     4         time.rock #> 104  RT1        bbip     3         time.rock #> 105  RT1        ccer     2         time.rock #> 106  RT1        cort     1         time.rock #> 107  RT1        dper     1         time.rock #> 108  RT1        ffau     7         time.rock #> 109  RT1        hobv     8         time.rock #> 110  RT1        iiso     6         time.rock #> 111  RT1        pinc     3         time.rock #> 112  RT1        pvic     4         time.rock #> 113  RT1        tuni     5         time.rock #> 114  RT2        amin     1         time.rock #> 115  RT2        apur     2         time.rock #> 116  RT2        bbip     3         time.rock #> 117  RT2        bcan     1         time.rock #> 118  RT2        cort     1         time.rock #> 119  RT2        ctri     1         time.rock #> 120  RT2        dper     2         time.rock #> 121  RT2        estr     4         time.rock #> 122  RT2        ffau    12         time.rock #> 123  RT2        hobv     1         time.rock #> 124  RT2        iiso     8         time.rock #> 125  RT2        pinc     5         time.rock #> 126  RT2        pvic     1         time.rock #> 127  RT2        tuni     3         time.rock #> 128  RT2        vidi     2         time.rock #> 129  RT3        amin     5         time.rock #> 130  RT3        apur     1         time.rock #> 131  RT3        bbip     5         time.rock #> 132  RT3        clam     1         time.rock #> 133  RT3        ffau     6         time.rock #> 134  RT3        hobv     4         time.rock #> 135  RT3        iiso     1         time.rock #> 136  RT3        pinc     3         time.rock #> 137  RT3        pvic     3         time.rock #> 138  RT3        tuni     1         time.rock #> 139  WQ1        amin     3 quadrat.live.wood #> 140  WQ1        bbip     1 quadrat.live.wood #> 141  WQ1        bcan     1 quadrat.live.wood #> 142  WQ1        cort     3 quadrat.live.wood #> 143  WQ1        iiso     2 quadrat.live.wood #> 144  WQ1        pinc     2 quadrat.live.wood #> 145  WQ1        ppyg    31 quadrat.live.wood #> 146  WQ1        pvic     1 quadrat.live.wood #> 147  WQ1        vidi     4 quadrat.live.wood #> 148  WQ2        amin     4 quadrat.live.wood #> 149  WQ2        bbip     1 quadrat.live.wood #> 150  WQ2        ccer     1 quadrat.live.wood #> 151  WQ2        dper    20 quadrat.live.wood #> 152  WQ2        estr     2 quadrat.live.wood #> 153  WQ2        mobs     2 quadrat.live.wood #> 154  WQ2        pinc     1 quadrat.live.wood #> 155  WQ2        ppyg    56 quadrat.live.wood #> 156  WQ2        pvic     1 quadrat.live.wood #> 157  WQ2        tuni     2 quadrat.live.wood #> 158  WQ3        amin    10 quadrat.live.wood #> 159  WQ3        bbip     3 quadrat.live.wood #> 160  WQ3        estr     1 quadrat.live.wood #> 161  WQ3        ffau     2 quadrat.live.wood #> 162  WQ3        pinc     1 quadrat.live.wood #> 163  WQ3        ppyg     5 quadrat.live.wood #> 164  WQ3        vicr     1 quadrat.live.wood #> 165  WQ3        vidi     1 quadrat.live.wood #> 166  WT1        amin     1    time.live.wood #> 167  WT1        cort     1    time.live.wood #> 168  WT1        estr     1    time.live.wood #> 169  WT1        ffau     1    time.live.wood #> 170  WT1        tuni     1    time.live.wood #> 171  WT2        amin     2    time.live.wood #> 172  WT2        apur     1    time.live.wood #> 173  WT2        bbip     1    time.live.wood #> 174  WT2        dper     2    time.live.wood #> 175  WT3        amin     4    time.live.wood #> 176  WT3        ffau     1    time.live.wood #> 177  WT3        vidi     1    time.live.wood ## From taxa table melt(x, \"familia\", by.samp = FALSE) #>     samp        taxa count         segm #> 1    DQ1        amin     4    Helicidae #> 2    DQ1        ctri     2    Helicidae #> 3    DQ1        dper     2    Helicidae #> 4    DQ1        estr     1 Clausiliidae #> 5    DQ1        vidi     9 Clausiliidae #> 6    DQ2        amin     4  Valloniidae #> 7    DQ2        apur     1    Helicidae #> 8    DQ2        ctri    20  Valloniidae #> 9    DQ2        dper     2 Clausiliidae #> 10   DQ2        druf     2    Helicidae #> 11   DQ2        ppyg     1  Valloniidae #> 12   DQ2        vidi     9 Clausiliidae #> 13   DQ3        amin     3    Zonitidae #> 14   DQ3        apur     1 Endodontidae #> 15   DQ3        hobv     3    Zonitidae #> 16   DQ3        vidi     2 Clausiliidae #> 17   DT1        amin     1    Zonitidae #> 18   DT1        bcan     1    Helicidae #> 19   DT1        dper     1    Orculidae #> 20   DT1        estr     1 Clausiliidae #> 21   DT1        hobv     1    Zonitidae #> 22   DT1        mbor     5    Orculidae #> 23   DT1        pvic     1    Helicidae #> 24   DT2        amin     2  Valloniidae #> 25   DT2        apur     1    Helicidae #> 26   DT2        bbip     1    Zonitidae #> 27   DT2        clam     2   Ellobiidae #> 28   DT2        dper     1    Zonitidae #> 29   DT2        druf     1    Helicidae #> 30   DT2        estr     1   Ellobiidae #> 31   DT2        hobv     1  Valloniidae #> 32   DT2        tuni     1    Zonitidae #> 33   DT2        vidi     2   Ellobiidae #> 34   DT3        amin     3    Zonitidae #> 35   DT3        bbip     1    Helicidae #> 36   DT3        hobv     6    Zonitidae #> 37   DT3        pvic     1  Valloniidae #> 38   DT3        vidi     2    Zonitidae #> 39   LQ1        aacu     1 Clausiliidae #> 40   LQ1        amin     3    Zonitidae #> 41   LQ1        dper     1 Endodontidae #> 42   LQ1        ffau     1 Clausiliidae #> 43   LQ1        ppyg    28    Zonitidae #> 44   LQ2        aacu     1 Clausiliidae #> 45   LQ2        amin     1 Clausiliidae #> 46   LQ2        dper     1    Helicidae #> 47   LQ2        ppyg    13 Clausiliidae #> 48   LQ2        pvic     1    Zonitidae #> 49   LQ3        amin     2 Clausiliidae #> 50   LQ3        apur     1  Valloniidae #> 51   LQ3        bbip     1    Helicidae #> 52   LQ3        ccer     1    Helicidae #> 53   LQ3        dper     7    Helicidae #> 54   LQ3        ppyg    69 Clausiliidae #> 55   LQ3        pvic     1  Valloniidae #> 56   LT1 zero.pseudo     0  zero.pseudo #> 57   LT2        amin     1 Clausiliidae #> 58   LT2        pvic     1    Zonitidae #> 59   LT3        amin     5 Clausiliidae #> 60   LT3        dper     1    Zonitidae #> 61   LT3        pinc     1    Zonitidae #> 62   LT3        pvic     1 Clausiliidae #> 63   LT3        tuni     2    Zonitidae #> 64   RQ1        amin     3   Ellobiidae #> 65   RQ1        ccer     1    Zonitidae #> 66   RQ1        clam     1    Helicidae #> 67   RQ1        cort     1  Euconulidae #> 68   RQ1        dper     3  Valloniidae #> 69   RQ1        ffau     2  Euconulidae #> 70   RQ1        hobv     2   Ellobiidae #> 71   RQ1        ogla     1    Helicidae #> 72   RQ1        ppyg     5   Ellobiidae #> 73   RQ1        vidi     4    Helicidae #> 74   RQ2        amin     7    Zonitidae #> 75   RQ2        bbip     4    Zonitidae #> 76   RQ2        ctri     7    Zonitidae #> 77   RQ2        dbre     1 Clausiliidae #> 78   RQ2        dper     6    Zonitidae #> 79   RQ2        estr     3 Clausiliidae #> 80   RQ2        ffau     2    Helicidae #> 81   RQ2        hobv     9    Zonitidae #> 82   RQ2        mobs     2  Valloniidae #> 83   RQ2        odol    13    Helicidae #> 84   RQ2        ogla     3 Clausiliidae #> 85   RQ2        ppyg    28    Zonitidae #> 86   RQ2        pvic     1 Clausiliidae #> 87   RQ2        tuni     2    Zonitidae #> 88   RQ2        vcos     2  Valloniidae #> 89   RQ2        vidi     7 Clausiliidae #> 90   RQ3        aacu     2    Helicidae #> 91   RQ3        amin    13 Endodontidae #> 92   RQ3        bbip     1    Zonitidae #> 93   RQ3        ctri    10 Endodontidae #> 94   RQ3        dbre     3 Clausiliidae #> 95   RQ3        dper     6    Zonitidae #> 96   RQ3        eful     2 Endodontidae #> 97   RQ3        ffau     2    Helicidae #> 98   RQ3        hobv     2 Endodontidae #> 99   RQ3        mobs     1    Zonitidae #> 100  RQ3        ppyg     9 Endodontidae #> 101  RQ3        pvic     1 Clausiliidae #> 102  RQ3        vidi    11       Enidae #> 103  RT1        amin     4    Zonitidae #> 104  RT1        bbip     3 Clausiliidae #> 105  RT1        ccer     2    Helicidae #> 106  RT1        cort     1    Helicidae #> 107  RT1        dper     1 Clausiliidae #> 108  RT1        ffau     7    Helicidae #> 109  RT1        hobv     8    Zonitidae #> 110  RT1        iiso     6 Clausiliidae #> 111  RT1        pinc     3    Helicidae #> 112  RT1        pvic     4 Clausiliidae #> 113  RT1        tuni     5 Clausiliidae #> 114  RT2        amin     1  Euconulidae #> 115  RT2        apur     2   Ellobiidae #> 116  RT2        bbip     3 Clausiliidae #> 117  RT2        bcan     1  Valloniidae #> 118  RT2        cort     1    Helicidae #> 119  RT2        ctri     1  Euconulidae #> 120  RT2        dper     2 Clausiliidae #> 121  RT2        estr     4    Zonitidae #> 122  RT2        ffau    12    Helicidae #> 123  RT2        hobv     1  Euconulidae #> 124  RT2        iiso     8   Ellobiidae #> 125  RT2        pinc     5    Helicidae #> 126  RT2        pvic     1   Ellobiidae #> 127  RT2        tuni     3 Clausiliidae #> 128  RT2        vidi     2    Zonitidae #> 129  RT3        amin     5    Helicidae #> 130  RT3        apur     1    Zonitidae #> 131  RT3        bbip     5 Clausiliidae #> 132  RT3        clam     1    Helicidae #> 133  RT3        ffau     6 Clausiliidae #> 134  RT3        hobv     4    Helicidae #> 135  RT3        iiso     1    Zonitidae #> 136  RT3        pinc     3 Clausiliidae #> 137  RT3        pvic     3    Zonitidae #> 138  RT3        tuni     1 Clausiliidae #> 139  WQ1        amin     3    Helicidae #> 140  WQ1        bbip     1 Clausiliidae #> 141  WQ1        bcan     1    Zonitidae #> 142  WQ1        cort     3       Enidae #> 143  WQ1        iiso     2 Endodontidae #> 144  WQ1        pinc     2       Enidae #> 145  WQ1        ppyg    31    Helicidae #> 146  WQ1        pvic     1 Endodontidae #> 147  WQ1        vidi     4 Endodontidae #> 148  WQ2        amin     4    Helicidae #> 149  WQ2        bbip     1 Clausiliidae #> 150  WQ2        ccer     1    Zonitidae #> 151  WQ2        dper    20 Clausiliidae #> 152  WQ2        estr     2    Helicidae #> 153  WQ2        mobs     2 Clausiliidae #> 154  WQ2        pinc     1    Orculidae #> 155  WQ2        ppyg    56    Helicidae #> 156  WQ2        pvic     1    Zonitidae #> 157  WQ2        tuni     2 Clausiliidae #> 158  WQ3        amin    10    Helicidae #> 159  WQ3        bbip     3   Ellobiidae #> 160  WQ3        estr     1    Helicidae #> 161  WQ3        ffau     2    Zonitidae #> 162  WQ3        pinc     1    Zonitidae #> 163  WQ3        ppyg     5    Helicidae #> 164  WQ3        vicr     1  Valloniidae #> 165  WQ3        vidi     1    Helicidae #> 166  WT1        amin     1 Clausiliidae #> 167  WT1        cort     1    Helicidae #> 168  WT1        estr     1  Valloniidae #> 169  WT1        ffau     1    Helicidae #> 170  WT1        tuni     1    Zonitidae #> 171  WT2        amin     2       Enidae #> 172  WT2        apur     1    Helicidae #> 173  WT2        bbip     1 Endodontidae #> 174  WT2        dper     2 Endodontidae #> 175  WT3        amin     4    Orculidae #> 176  WT3        ffau     1    Helicidae #> 177  WT3        vidi     1    Zonitidae ## Example for non-integer data y <- x$xtab y[y > 0] <-  y[y > 0] + 0.123 z <- mefa(y) melt(z) #>     samp        taxa  count        segm #> 1    DQ1        amin  4.123   undefined #> 2    DQ1        ctri  2.123   undefined #> 3    DQ1        dper  2.123   undefined #> 4    DQ1        estr  1.123   undefined #> 5    DQ1        vidi  9.123   undefined #> 6    DQ2        amin  4.123   undefined #> 7    DQ2        apur  1.123   undefined #> 8    DQ2        ctri 20.123   undefined #> 9    DQ2        dper  2.123   undefined #> 10   DQ2        druf  2.123   undefined #> 11   DQ2        ppyg  1.123   undefined #> 12   DQ2        vidi  9.123   undefined #> 13   DQ3        amin  3.123   undefined #> 14   DQ3        apur  1.123   undefined #> 15   DQ3        hobv  3.123   undefined #> 16   DQ3        vidi  2.123   undefined #> 17   DT1        amin  1.123   undefined #> 18   DT1        bcan  1.123   undefined #> 19   DT1        dper  1.123   undefined #> 20   DT1        estr  1.123   undefined #> 21   DT1        hobv  1.123   undefined #> 22   DT1        mbor  5.123   undefined #> 23   DT1        pvic  1.123   undefined #> 24   DT2        amin  2.123   undefined #> 25   DT2        apur  1.123   undefined #> 26   DT2        bbip  1.123   undefined #> 27   DT2        clam  2.123   undefined #> 28   DT2        dper  1.123   undefined #> 29   DT2        druf  1.123   undefined #> 30   DT2        estr  1.123   undefined #> 31   DT2        hobv  1.123   undefined #> 32   DT2        tuni  1.123   undefined #> 33   DT2        vidi  2.123   undefined #> 34   DT3        amin  3.123   undefined #> 35   DT3        bbip  1.123   undefined #> 36   DT3        hobv  6.123   undefined #> 37   DT3        pvic  1.123   undefined #> 38   DT3        vidi  2.123   undefined #> 39   LQ1        aacu  1.123   undefined #> 40   LQ1        amin  3.123   undefined #> 41   LQ1        dper  1.123   undefined #> 42   LQ1        ffau  1.123   undefined #> 43   LQ1        ppyg 28.123   undefined #> 44   LQ2        aacu  1.123   undefined #> 45   LQ2        amin  1.123   undefined #> 46   LQ2        dper  1.123   undefined #> 47   LQ2        ppyg 13.123   undefined #> 48   LQ2        pvic  1.123   undefined #> 49   LQ3        amin  2.123   undefined #> 50   LQ3        apur  1.123   undefined #> 51   LQ3        bbip  1.123   undefined #> 52   LQ3        ccer  1.123   undefined #> 53   LQ3        dper  7.123   undefined #> 54   LQ3        ppyg 69.123   undefined #> 55   LQ3        pvic  1.123   undefined #> 56   LT1 zero.pseudo  0.000 zero.pseudo #> 57   LT2        amin  1.123   undefined #> 58   LT2        pvic  1.123   undefined #> 59   LT3        amin  5.123   undefined #> 60   LT3        dper  1.123   undefined #> 61   LT3        pinc  1.123   undefined #> 62   LT3        pvic  1.123   undefined #> 63   LT3        tuni  2.123   undefined #> 64   RQ1        amin  3.123   undefined #> 65   RQ1        ccer  1.123   undefined #> 66   RQ1        clam  1.123   undefined #> 67   RQ1        cort  1.123   undefined #> 68   RQ1        dper  3.123   undefined #> 69   RQ1        ffau  2.123   undefined #> 70   RQ1        hobv  2.123   undefined #> 71   RQ1        ogla  1.123   undefined #> 72   RQ1        ppyg  5.123   undefined #> 73   RQ1        vidi  4.123   undefined #> 74   RQ2        amin  7.123   undefined #> 75   RQ2        bbip  4.123   undefined #> 76   RQ2        ctri  7.123   undefined #> 77   RQ2        dbre  1.123   undefined #> 78   RQ2        dper  6.123   undefined #> 79   RQ2        estr  3.123   undefined #> 80   RQ2        ffau  2.123   undefined #> 81   RQ2        hobv  9.123   undefined #> 82   RQ2        mobs  2.123   undefined #> 83   RQ2        odol 13.123   undefined #> 84   RQ2        ogla  3.123   undefined #> 85   RQ2        ppyg 28.123   undefined #> 86   RQ2        pvic  1.123   undefined #> 87   RQ2        tuni  2.123   undefined #> 88   RQ2        vcos  2.123   undefined #> 89   RQ2        vidi  7.123   undefined #> 90   RQ3        aacu  2.123   undefined #> 91   RQ3        amin 13.123   undefined #> 92   RQ3        bbip  1.123   undefined #> 93   RQ3        ctri 10.123   undefined #> 94   RQ3        dbre  3.123   undefined #> 95   RQ3        dper  6.123   undefined #> 96   RQ3        eful  2.123   undefined #> 97   RQ3        ffau  2.123   undefined #> 98   RQ3        hobv  2.123   undefined #> 99   RQ3        mobs  1.123   undefined #> 100  RQ3        ppyg  9.123   undefined #> 101  RQ3        pvic  1.123   undefined #> 102  RQ3        vidi 11.123   undefined #> 103  RT1        amin  4.123   undefined #> 104  RT1        bbip  3.123   undefined #> 105  RT1        ccer  2.123   undefined #> 106  RT1        cort  1.123   undefined #> 107  RT1        dper  1.123   undefined #> 108  RT1        ffau  7.123   undefined #> 109  RT1        hobv  8.123   undefined #> 110  RT1        iiso  6.123   undefined #> 111  RT1        pinc  3.123   undefined #> 112  RT1        pvic  4.123   undefined #> 113  RT1        tuni  5.123   undefined #> 114  RT2        amin  1.123   undefined #> 115  RT2        apur  2.123   undefined #> 116  RT2        bbip  3.123   undefined #> 117  RT2        bcan  1.123   undefined #> 118  RT2        cort  1.123   undefined #> 119  RT2        ctri  1.123   undefined #> 120  RT2        dper  2.123   undefined #> 121  RT2        estr  4.123   undefined #> 122  RT2        ffau 12.123   undefined #> 123  RT2        hobv  1.123   undefined #> 124  RT2        iiso  8.123   undefined #> 125  RT2        pinc  5.123   undefined #> 126  RT2        pvic  1.123   undefined #> 127  RT2        tuni  3.123   undefined #> 128  RT2        vidi  2.123   undefined #> 129  RT3        amin  5.123   undefined #> 130  RT3        apur  1.123   undefined #> 131  RT3        bbip  5.123   undefined #> 132  RT3        clam  1.123   undefined #> 133  RT3        ffau  6.123   undefined #> 134  RT3        hobv  4.123   undefined #> 135  RT3        iiso  1.123   undefined #> 136  RT3        pinc  3.123   undefined #> 137  RT3        pvic  3.123   undefined #> 138  RT3        tuni  1.123   undefined #> 139  WQ1        amin  3.123   undefined #> 140  WQ1        bbip  1.123   undefined #> 141  WQ1        bcan  1.123   undefined #> 142  WQ1        cort  3.123   undefined #> 143  WQ1        iiso  2.123   undefined #> 144  WQ1        pinc  2.123   undefined #> 145  WQ1        ppyg 31.123   undefined #> 146  WQ1        pvic  1.123   undefined #> 147  WQ1        vidi  4.123   undefined #> 148  WQ2        amin  4.123   undefined #> 149  WQ2        bbip  1.123   undefined #> 150  WQ2        ccer  1.123   undefined #> 151  WQ2        dper 20.123   undefined #> 152  WQ2        estr  2.123   undefined #> 153  WQ2        mobs  2.123   undefined #> 154  WQ2        pinc  1.123   undefined #> 155  WQ2        ppyg 56.123   undefined #> 156  WQ2        pvic  1.123   undefined #> 157  WQ2        tuni  2.123   undefined #> 158  WQ3        amin 10.123   undefined #> 159  WQ3        bbip  3.123   undefined #> 160  WQ3        estr  1.123   undefined #> 161  WQ3        ffau  2.123   undefined #> 162  WQ3        pinc  1.123   undefined #> 163  WQ3        ppyg  5.123   undefined #> 164  WQ3        vicr  1.123   undefined #> 165  WQ3        vidi  1.123   undefined #> 166  WT1        amin  1.123   undefined #> 167  WT1        cort  1.123   undefined #> 168  WT1        estr  1.123   undefined #> 169  WT1        ffau  1.123   undefined #> 170  WT1        tuni  1.123   undefined #> 171  WT2        amin  2.123   undefined #> 172  WT2        apur  1.123   undefined #> 173  WT2        bbip  1.123   undefined #> 174  WT2        dper  2.123   undefined #> 175  WT3        amin  4.123   undefined #> 176  WT3        ffau  1.123   undefined #> 177  WT3        vidi  1.123   undefined"},{"path":"/reference/plot.mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"Various methods plotting objects class 'mefa'.","code":""},{"path":"/reference/plot.mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"","code":"# S3 method for mefa plot(x, stat = 1:4, type = c(\"hist\", \"rank\"), trafo = c(\"none\", \"log\", \"ratio\"), show = TRUE, ylab, xlab, ...) # S3 method for mefa boxplot(x, stat = 1:4, all = TRUE, show = TRUE, ylab, xlab, ...) # S3 method for mefa image(x, segm=NULL, trafo=c(\"none\", \"log\", \"bins\", \"prab\"),  probs = seq(0, 1, 0.05), ordering = TRUE, reverse = TRUE, names = FALSE, show = TRUE, ylab, xlab, ...) # S3 method for stcs plot(x, stat = 1:4, type = c(\"hist\", \"rank\"), trafo = c(\"none\", \"log\", \"ratio\"), show = TRUE, ylab, xlab, ...) # S3 method for stcs boxplot(x, stat = 1:4, all = TRUE, show = TRUE, ylab, xlab, ...) # S3 method for stcs image(x, segm=NULL, trafo=c(\"none\", \"log\", \"bins\", \"prab\"),  probs = seq(0, 1, 0.05), ordering = TRUE, reverse = TRUE, names = FALSE, show = TRUE, ylab, xlab, ...)"},{"path":"/reference/plot.mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"x object class 'mefa' 'stcs'. stat numeric, determine characteristic plot. 1: number species samples (default), 2: total number individuals samples, 3: number occurrences per taxa, 4 number individuals per taxa. type character, \"hist\" produces barchart discrete values histogram continuous values (default), \"rank\" ranked curves based characteristic defined stat. trafo character, transformation plotted variable. \"none\": transformation (default), \"log\": logarithmic transformation (base 10), \"ratio\": normalizes values maximum rescales [0, 1] interval (useful plotting multiple rank abundance curves), \"bins\": recodes values according quantiles based probs, \"prab\": presence absence transformation count data. logical, TRUE values stat plotted segments boxplot. ylab, xlab character overwrite default label y x axes. NULL, default labels returned plot. segm NULL x$xtab matrix used plotting. Otherways, defines segment (one element x$segm) plotting (can numeric character name segment). probs numeric vector probabilities values [0, 1] (passed internally qvector). ordering logical, TRUE (default) samples--taxa matrix ordered row columns sums, FALSE row columns rearranged. reverse logical, values plot reversed (TRUE, default, original zero values lightly, higher values strongly coloured) (FALSE). related col argument generic function image. Currently, heat.colors default color scheme. names logical, labels samples taxa plot using names x. logical vector length 2, sample taxa names returned accordingly. show logical, produce plot (TRUE) (FALSE). FALSE can useful, returned plotted values reused (e.g. matrix returned invisibly image can used filled.contour, multiple values used one plot). ... arguments pass plotting functions. See especially zlim col arguments generic function image, arguments generic function boxplot.","code":""},{"path":"/reference/plot.mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"plot returns barchart/histogram, ranked curve summary statistics (number species, individuals samples, number occurrences abundance taxa) based x$xtab matrix 'mefa' objects. values basically returned summary.mefa. boxplot returns box--whiskers plots summary statistics based matrices segments x$segm. image creates grid colored rectangles colors corresponding values segment defined argument segm. ordering = TRUE, ordering segment based x$xtab matrix matrix segment . due better comparison among segments. graphical display methods objects class 'stcs' based conversion object 'mefa', respective plotting method applied. conversion made based default mefa settings (e.g. segments). control needed object structure, use mefa function coerce appropriate class .","code":""},{"path":"/reference/plot.mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"methods produce plot show = TRUE, return plotted values invisibly, visibly show = FALSE.","code":""},{"path":"/reference/plot.mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/plot.mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/plot.mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Methods for Object of Class 'mefa' and 'stcs' — plot.mefa","text":"","code":"data(dol.count, dol.samp, dol.taxa) x <- mefa(stcs(dol.count), dol.samp, dol.taxa) ## Frequency distributions opar <- par(mfrow=c(2,2)) plot(x, 1) plot(x, 2) plot(x, 3) plot(x, 4)  par(opar) ## Ranked curves opar <- par(mfrow=c(2,2)) plot(x, 1, type=\"rank\") plot(x, 2, type=\"rank\") plot(x, 3, type=\"rank\") plot(x, 4, type=\"rank\")  par(opar) ## Boxplot for segments opar <- par(mfrow=c(2,2)) boxplot(x, 1) boxplot(x, 2) boxplot(x, 3) boxplot(x, 4)  par(opar) ## Image (levelplot) ## comparing all and the segments opar <- par(mfrow=c(1,3)) image(x, trafo = \"bins\", main = \"All segments\") image(x, segm = 1, trafo = \"bins\", main = dimnames(x)$segm[1]) image(x, segm = 2, trafo = \"bins\", main = dimnames(x)$segm[2])  par(opar) ## For black and white, with names image(x, col = grey(seq(0, 1, 0.1)), names = TRUE)  ## For nice colors other than default opar <- par(mfrow=c(1,2)) image(x[,,\"fresh\"], col = topo.colors(10), main = \"Fresh\") image(x[,,\"broken\"], col = terrain.colors(10), main = \"Broken\")  par(opar)"},{"path":"/reference/qvector.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinal Transformation of a Vector — qvector","title":"Ordinal Transformation of a Vector — qvector","text":"Converts numeric vector ordinal one based quantiles.","code":""},{"path":"/reference/qvector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinal Transformation of a Vector — qvector","text":"","code":"qvector(x, probs = seq(0, 1, 0.25), na.rm = FALSE, ...)"},{"path":"/reference/qvector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinal Transformation of a Vector — qvector","text":"x numeric vector. probs numeric vector probabilities values [0, 1] used quantile. na.rm logical, true, NA NaNs removed x quantiles computed. ... arguments passed function quantile.","code":""},{"path":"/reference/qvector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinal Transformation of a Vector — qvector","text":"numeric vector length input vector, containing respective (upper) quantile values.","code":""},{"path":"/reference/qvector.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ordinal Transformation of a Vector — qvector","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/qvector.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Ordinal Transformation of a Vector — qvector","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/qvector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordinal Transformation of a Vector — qvector","text":"","code":"x <- rnorm(20) x #>  [1]  0.60674805 -0.10993567  0.17218172 -0.09032729  1.92434334  1.29839276 #>  [7]  0.74879127  0.55622433 -0.54825726  1.11053489 -2.61233433 -0.15569378 #> [13]  0.43388979 -0.38195111  0.42418757  1.06310200  1.04871262 -0.03810289 #> [19]  0.48614892  1.67288261 y <- qvector(x) y #>  [1] 0.75 0.25 0.50 0.50 1.00 1.00 0.75 0.75 0.25 1.00 0.25 0.25 0.50 0.25 0.50 #> [16] 1.00 0.75 0.50 0.75 1.00 rbind(x, y) #>       [,1]       [,2]      [,3]        [,4]     [,5]     [,6]      [,7] #> x 0.606748 -0.1099357 0.1721817 -0.09032729 1.924343 1.298393 0.7487913 #> y 0.750000  0.2500000 0.5000000  0.50000000 1.000000 1.000000 0.7500000 #>        [,8]       [,9]    [,10]     [,11]      [,12]     [,13]      [,14] #> x 0.5562243 -0.5482573 1.110535 -2.612334 -0.1556938 0.4338898 -0.3819511 #> y 0.7500000  0.2500000 1.000000  0.250000  0.2500000 0.5000000  0.2500000 #>       [,15]    [,16]    [,17]       [,18]     [,19]    [,20] #> x 0.4241876 1.063102 1.048713 -0.03810289 0.4861489 1.672883 #> y 0.5000000 1.000000 0.750000  0.50000000 0.7500000 1.000000 plot(x, y, type=\"h\")"},{"path":"/reference/rep.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Inflate (repeat) a Data Frame — rep.data.frame","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"function inflates data frame based count values vector corresponding rows.","code":""},{"path":"/reference/rep.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"","code":"# S3 method for data.frame rep(x, ...)"},{"path":"/reference/rep.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"x matrix data frame, can vector. ... arguments passed function rep, .e. times,     length.(see explanation ).","code":""},{"path":"/reference/rep.data.frame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"rows data frame x repeated many times corresponding value e.g. vector times. function called internally function stcs.","code":""},{"path":"/reference/rep.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"data frame columns original (x) e.g. sum(times) number rows.","code":""},{"path":"/reference/rep.data.frame.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/rep.data.frame.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":[]},{"path":"/reference/rep.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inflate (repeat) a Data Frame — rep.data.frame","text":"","code":"x <- data.frame(sample = LETTERS[c(1,1,2,2,3)],     species = letters[c(5,5,5,6,7)],     count = c(1,2,10,3,4), segment = letters[c(8,9,8,9,8)]) x #>   sample species count segment #> 1      A       e     1       h #> 2      A       e     2       i #> 3      B       e    10       h #> 4      B       f     3       i #> 5      C       g     4       h rep(x[,c(1,2,4)], times = x[,3]) #>    sample species segment #> 1       A       e       h #> 2       A       e       i #> 3       A       e       i #> 4       B       e       h #> 5       B       e       h #> 6       B       e       h #> 7       B       e       h #> 8       B       e       h #> 9       B       e       h #> 10      B       e       h #> 11      B       e       h #> 12      B       e       h #> 13      B       e       h #> 14      B       f       i #> 15      B       f       i #> 16      B       f       i #> 17      C       g       h #> 18      C       g       h #> 19      C       g       h #> 20      C       g       h rep(x[,c(1,2,4)], each = 2) #>    sample species segment #> 1       A       e       h #> 2       A       e       h #> 3       A       e       i #> 4       A       e       i #> 5       B       e       h #> 6       B       e       h #> 7       B       f       i #> 8       B       f       i #> 9       C       g       h #> 10      C       g       h"},{"path":"/reference/report.mefa.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Report of an Object of Class 'mefa' into File — report.mefa","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"data 'mefa' object written file standard format used local journals publishing distribution data organisms. aim provide exporting facility can directly used generating reports, parts research papers, supplementary materials.","code":""},{"path":"/reference/report.mefa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"","code":"report(x, ...) # S3 method for mefa report(x, filename, segment = FALSE, n = NULL,     by.taxa = TRUE, samp.var = NULL, drop.redundant = NULL,     collapse = TRUE, taxa.name = NULL, author.name = NULL,     taxa.order = NULL, grouping = FALSE, tex = FALSE, binary = FALSE,     tex.control = list(ital.taxa = TRUE, noindent = TRUE,      bold.sect = TRUE, bold.1st = TRUE, vspace1 = 0.5, vspace2 = 0.2),     sep = c(\",\", \":\", \"(\", \":\", \",\", \")\", \";\"), dir = getwd(), ...)"},{"path":"/reference/report.mefa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"x object class 'mefa'. filename character, name file written working directory directory defined outdir argument. segment logical, NULL (default) segments distinguished output. TRUE (n = NULL) segments used distinguished. n segments used. NULL segments used, NULL, give names segments used (segment = TRUE). .taxa logical, whether main sectioning made according taxa (TRUE, default) samples (FALSE, currently implemented). samp.var variables samples table (x$samp) used report. Variables appear order given . drop.redundant logical, whether redundant elements dropped (integer length(samp.var)-1) (NULL, default). collapse logical, TRUE samples identical values samp.var given species collapsed avoid redundancy. taxa.name column taxa table (x$taxa) taxa names stored. default (NULL) dimnames(x)$taxa used. author.name column taxa table (x$taxa) authors' names dates descriptions stored. default used (NULL). specified, follow species names report. taxa.order column taxa table (x$taxa) variable ordering stored. default (NULL) taxa.name used ordering. grouping logical, whether records given species collapsed single paragraph without grouping (FALSE, default), grouped separate paragraphs (TRUE). tex logical, whether generate formatted LaTeX output (TRUE) plain text file (FALSE). binary logical, TRUE result contains count data. tex.control list LaTex formatting options (tex = TRUE). ital.taxa controls italicised taxa names, noindent controls indentation paragraphs, bold.sect controls boldface type paragraph openings, bold.1st controls boldface type first elements record given species, vspace1 controls space species blocks, vspace2 controls space paragraphs species (gouping = FALSE). sep character vector length 7. 1st separates values samp.var, 2nd placed values samp.var redundant elements dropped, 3rd opening character count data, 4th stands segment name, 5th separates values segments, 6th closing character count data, 7th separates records. dir character, full path directory file written (working directory restored). NULL, current working directory used. ... arguments potentially passed (currently none).","code":""},{"path":"/reference/report.mefa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"resulting file can recycled copy--pasting document (tex = FALSE) included LaTeX report (e.g. via package Sweave, see mefadocs(\"SampleReport\")). Contrary many arguments, default values need much modifications cases (see examples).","code":""},{"path":"/reference/report.mefa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"Writes file working (specified) directory.","code":""},{"path":"/reference/report.mefa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/report.mefa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/report.mefa.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":".taxa = FALSE option yet implemented.","code":""},{"path":[]},{"path":"/reference/report.mefa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Report of an Object of Class 'mefa' into File — report.mefa","text":"","code":"data(dol.count, dol.samp, dol.taxa) x <- mefa(stcs(dol.count), dol.samp, dol.taxa) if (FALSE) { ## Plain text ## Count values from x$xtab report(x, \"report-all.txt\") ## Count values for each segments report(x, \"report-segm-all.txt\",     samp.var = c(\"method\",\"microhab\"), segment = TRUE) ## LaTeX formatting report(x, \"report-all.tex\", tex=TRUE) ## For how to include into a TeX or Rnw file, see: mefadocs(\"SampleReport\") }"},{"path":"/reference/stack.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulation Tools for Class 'dist' — as.data.frame.dist","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"Converts 'dist' object vector vice versa.","code":""},{"path":"/reference/stack.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"","code":"vec2dist(x, size, labels = NULL, diag = FALSE, upper = FALSE,  call = FALSE, method = NULL) is.dist(x) # S3 method for dist stack(x, dim.names = FALSE, ...)"},{"path":"/reference/stack.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"x vector 'dist' object. size Integer, number observations dataset (see dist). labels, diag, upper, call, method Logical, setting attributes distance object (see dist). dim.names Logical, TRUE, names stored Labels attribute  dist object returned factors instead row/column indices. ... arguments passed functions.","code":""},{"path":"/reference/stack.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"vec2dist returns object class dist. .dist returns logical statement class object. stack.dist returns data frame comuns row row id's, col column id's dist distance values.","code":""},{"path":"/reference/stack.dist.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/stack.dist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/stack.dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulation Tools for Class 'dist' — as.data.frame.dist","text":"","code":"vec2dist(1:3, 3) #>   1 2 #> 2 1   #> 3 2 3 vec2dist(1:3, 3, diag = TRUE) #>   1 2 3 #> 1 0     #> 2 1 0   #> 3 2 3 0 vec2dist(1:3, 3, diag = TRUE, upper = TRUE) #>   1 2 3 #> 1 0 1 2 #> 2 1 0 3 #> 3 2 3 0 vec2dist(1:3, 3, labels=letters[1:3]) #>   a b #> b 1   #> c 2 3 x <- dist(1:5) attr(x, \"Labels\") <- LETTERS[1:5] x #>   A B C D #> B 1       #> C 2 1     #> D 3 2 1   #> E 4 3 2 1 is.dist(x) #> [1] TRUE stack(x) #>    row col dist #> 1    2   1    1 #> 2    3   1    2 #> 3    4   1    3 #> 4    5   1    4 #> 5    3   2    1 #> 6    4   2    2 #> 7    5   2    3 #> 8    4   3    1 #> 9    5   3    2 #> 10   5   4    1 stack(x, dim.names = TRUE) #>    row col dist #> 1    B   A    1 #> 2    C   A    2 #> 3    D   A    3 #> 4    E   A    4 #> 5    C   B    1 #> 6    D   B    2 #> 7    E   B    3 #> 8    D   C    1 #> 9    E   C    2 #> 10   E   D    1"},{"path":"/reference/stcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an Object of Class 'stcs' — stcs","title":"Create an Object of Class 'stcs' — stcs","text":"function creates object class 'stcs' data frame. primary format long (database style) data sets mefa package. 'stcs' object can converted object class 'mefa' function mefa. function name 'stcs' refers first letters column names resulting object: samples, taxa, counts, segments.","code":""},{"path":"/reference/stcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an Object of Class 'stcs' — stcs","text":"","code":"stcs(dframe, expand = FALSE, drop.zero = FALSE, zero.pseudo = \"zero.pseudo\") # S3 method for stcs is(x) # S3 method for stcs summary(object, ...)"},{"path":"/reference/stcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an Object of Class 'stcs' — stcs","text":"dframe data frame 2-4 columns. 2 columns provided, assumed first column contains sample, second taxa names. 3 columns provided, first two treated sample taxa names, third treated count numeric (either integer non-integer values can supplied), segment character factor. 4 columns provided, assumed samples, taxa, count, segment order. expand logical, whether object (TRUE) expanded (via function rep.data.frame) (FALSE, default). expanded, rows correspond one individual observation (value count column 1) zero sample. expand = TRUE works integer values. drop.zero logical, whether samples zero total count left (TRUE) (FALSE, default). zero.pseudo character, value taxa column indicates zero samples. vector length 2, first element used taxa names, second segment names indicate zero samples. x, object object class 'stcs'. ... arguments passed function stcs.","code":""},{"path":"/reference/stcs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an Object of Class 'stcs' — stcs","text":"data long (database style) format, stcs function prepares ground mefa function make cross tabulation. crosstabulated matrix needed, table function can applies well (case sure set expand = TRUE, integer data), alternatively see xtabs mefaCrosstab functions (accepts non-integer data). subsetting, simply use extraction methods available data frames ([.data.frame). summary contains statistics calculated coercing object class 'mefa'. Methods extracting, subsetting data frame objects. Plotting 'stcs' objects discussed elsewhere (see links 'See also' section).","code":""},{"path":"/reference/stcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an Object of Class 'stcs' — stcs","text":"Returns object class 'stcs' 4 columns. column names converted consistently samp samples, taxa taxa names, count counts segm segment names. class methods (.e. , .stcs, summary plot), also data.frame class attribute. Thus methods available data frames applicable object class 'stcs' (e.g. print, str).","code":""},{"path":"/reference/stcs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an Object of Class 'stcs' — stcs","text":"S\\'olymos P. (2008) mefa: R package handling reporting count data. Community Ecology 9, 125--127. S\\'olymos P. (2009) Processing ecological data R mefa package. Journal Statistical Software 29(8), 1--28. doi:10.18637/jss.v029.i08 http://mefa.r-forge.r-project.org/","code":""},{"path":"/reference/stcs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create an Object of Class 'stcs' — stcs","text":"P\\'eter S\\'olymos, solymos@ualberta.ca","code":""},{"path":"/reference/stcs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create an Object of Class 'stcs' — stcs","text":"stcs function nearly equivalent sscount function older (< 2.0) versions mefa package.","code":""},{"path":[]},{"path":"/reference/stcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an Object of Class 'stcs' — stcs","text":"","code":"## General long format data x <- data.frame(     sample = paste(\"Sample\", c(1,1,2,2,3,4), sep=\".\"),     species = c(paste(\"Species\", c(1,1,1,2,3), sep=\".\"),  \"zero.pseudo\"),     count = c(1,2,10,3,4,0),     segment = letters[c(6,13,6,13,6,6)]) x #>     sample     species count segment #> 1 Sample.1   Species.1     1       f #> 2 Sample.1   Species.1     2       m #> 3 Sample.2   Species.1    10       f #> 4 Sample.2   Species.2     3       m #> 5 Sample.3   Species.3     4       f #> 6 Sample.4 zero.pseudo     0       f ## Long format as stcs y <- stcs(x) y #>       samp        taxa count        segm #> 1 Sample.1   Species.1     1           f #> 2 Sample.1   Species.1     2           m #> 3 Sample.2   Species.1    10           f #> 4 Sample.2   Species.2     3           m #> 5 Sample.3   Species.3     4           f #> 6 Sample.4 zero.pseudo     0 zero.pseudo ## Methods as.stcs(x) #>       samp        taxa count        segm #> 1 Sample.1   Species.1     1           f #> 2 Sample.1   Species.1     2           m #> 3 Sample.2   Species.1    10           f #> 4 Sample.2   Species.2     3           m #> 5 Sample.3   Species.3     4           f #> 6 Sample.4 zero.pseudo     0 zero.pseudo is(y, \"stcs\") #> [1] TRUE is(y, \"data.frame\") #> [1] TRUE ## Effects of arguments stcs(x, expand = TRUE) #>        samp        taxa count        segm #> 1  Sample.1   Species.1     1           f #> 2  Sample.1   Species.1     1           m #> 3  Sample.1   Species.1     1           m #> 4  Sample.2   Species.1     1           f #> 5  Sample.2   Species.1     1           f #> 6  Sample.2   Species.1     1           f #> 7  Sample.2   Species.1     1           f #> 8  Sample.2   Species.1     1           f #> 9  Sample.2   Species.1     1           f #> 10 Sample.2   Species.1     1           f #> 11 Sample.2   Species.1     1           f #> 12 Sample.2   Species.1     1           f #> 13 Sample.2   Species.1     1           f #> 14 Sample.2   Species.2     1           m #> 15 Sample.2   Species.2     1           m #> 16 Sample.2   Species.2     1           m #> 17 Sample.3   Species.3     1           f #> 18 Sample.3   Species.3     1           f #> 19 Sample.3   Species.3     1           f #> 20 Sample.3   Species.3     1           f #> 21 Sample.4 zero.pseudo     0 zero.pseudo stcs(x, drop.zero = TRUE) #>       samp      taxa count segm #> 1 Sample.1 Species.1     1    f #> 2 Sample.1 Species.1     2    m #> 3 Sample.2 Species.1    10    f #> 4 Sample.2 Species.2     3    m #> 5 Sample.3 Species.3     4    f stcs(x, zero.pseudo = \"pseudo.secies\") #>       samp          taxa count          segm #> 1 Sample.1     Species.1     1             f #> 2 Sample.1     Species.1     2             m #> 3 Sample.2     Species.1    10             f #> 4 Sample.2     Species.2     3             m #> 5 Sample.3     Species.3     4             f #> 6 Sample.4 pseudo.secies     0 pseudo.secies ## Input options stcs(x[,1:2]) #>       samp        taxa count      segm #> 1 Sample.1   Species.1     1 undefined #> 2 Sample.1   Species.1     1 undefined #> 3 Sample.2   Species.1     1 undefined #> 4 Sample.2   Species.2     1 undefined #> 5 Sample.3   Species.3     1 undefined #> 6 Sample.4 zero.pseudo     1 undefined stcs(x[,1:3]) #>       samp        taxa count        segm #> 1 Sample.1   Species.1     1   undefined #> 2 Sample.1   Species.1     2   undefined #> 3 Sample.2   Species.1    10   undefined #> 4 Sample.2   Species.2     3   undefined #> 5 Sample.3   Species.3     4   undefined #> 6 Sample.4 zero.pseudo     0 zero.pseudo stcs(x[,c(1:2,4)]) #>       samp        taxa count segm #> 1 Sample.1   Species.1     1    f #> 2 Sample.1   Species.1     1    m #> 3 Sample.2   Species.1     1    f #> 4 Sample.2   Species.2     1    m #> 5 Sample.3   Species.3     1    f #> 6 Sample.4 zero.pseudo     1    f ## The Dolina dataset data(dol.count) dol <- stcs(dol.count) dol #>     samp        taxa count        segm #> 1    DQ1        amin     2       fresh #> 2    DQ1        amin     2      broken #> 3    DQ1        ctri     2       fresh #> 4    DQ1        dper     2       fresh #> 5    DQ1        estr     1       fresh #> 6    DQ1        vidi     2      broken #> 7    DQ1        vidi     7       fresh #> 8    DQ2        amin     1      broken #> 9    DQ2        amin     3       fresh #> 10   DQ2        apur     1      broken #> 11   DQ2        ctri     7      broken #> 12   DQ2        ctri    13       fresh #> 13   DQ2        dper     1       fresh #> 14   DQ2        dper     1      broken #> 15   DQ2        druf     1       fresh #> 16   DQ2        druf     1      broken #> 17   DQ2        ppyg     1      broken #> 18   DQ2        vidi     4      broken #> 19   DQ2        vidi     5       fresh #> 20   DQ3        amin     1      broken #> 21   DQ3        amin     2       fresh #> 22   DQ3        apur     1       fresh #> 23   DQ3        hobv     3      broken #> 24   DQ3        vidi     2      broken #> 25   DT1        amin     1       fresh #> 26   DT1        bcan     1      broken #> 27   DT1        dper     1       fresh #> 28   DT1        estr     1      broken #> 29   DT1        hobv     1       fresh #> 30   DT1        mbor     5       fresh #> 31   DT1        pvic     1       fresh #> 32   DT2        amin     1       fresh #> 33   DT2        amin     1       fresh #> 34   DT2        apur     1       fresh #> 35   DT2        bbip     1       fresh #> 36   DT2        clam     2       fresh #> 37   DT2        dper     1       fresh #> 38   DT2        druf     1       fresh #> 39   DT2        estr     1      broken #> 40   DT2        hobv     1       fresh #> 41   DT2        tuni     1       fresh #> 42   DT2        vidi     2       fresh #> 43   DT3        amin     1       fresh #> 44   DT3        amin     2       fresh #> 45   DT3        bbip     1      broken #> 46   DT3        hobv     1       fresh #> 47   DT3        hobv     1      broken #> 48   DT3        hobv     4       fresh #> 49   DT3        pvic     1       fresh #> 50   DT3        vidi     2       fresh #> 51   LQ1        aacu     1       fresh #> 52   LQ1        amin     1      broken #> 53   LQ1        amin     2       fresh #> 54   LQ1        dper     1      broken #> 55   LQ1        ffau     1      broken #> 56   LQ1        ppyg    13       fresh #> 57   LQ1        ppyg    15      broken #> 58   LQ2        aacu     1       fresh #> 59   LQ2        amin     1      broken #> 60   LQ2        dper     1       fresh #> 61   LQ2        ppyg     5       fresh #> 62   LQ2        ppyg     8      broken #> 63   LQ2        pvic     1      broken #> 64   LQ3        amin     2      broken #> 65   LQ3        apur     1       fresh #> 66   LQ3        bbip     1      broken #> 67   LQ3        ccer     1      broken #> 68   LQ3        dper     1       fresh #> 69   LQ3        dper     1      broken #> 70   LQ3        dper     2       fresh #> 71   LQ3        dper     3       fresh #> 72   LQ3        ppyg     1       fresh #> 73   LQ3        ppyg    10       fresh #> 74   LQ3        ppyg    16      broken #> 75   LQ3        ppyg    17      broken #> 76   LQ3        ppyg    25       fresh #> 77   LQ3        pvic     1      broken #> 78   LT1 zero.pseudo     0 zero.pseudo #> 79   LT2        amin     1       fresh #> 80   LT2        pvic     1      broken #> 81   LT3        amin     1       fresh #> 82   LT3        amin     1       fresh #> 83   LT3        amin     3       fresh #> 84   LT3        dper     1       fresh #> 85   LT3        pinc     1       fresh #> 86   LT3        pvic     1       fresh #> 87   LT3        tuni     1       fresh #> 88   LT3        tuni     1      broken #> 89   RQ1        amin     1       fresh #> 90   RQ1        amin     1       fresh #> 91   RQ1        amin     1      broken #> 92   RQ1        ccer     1      broken #> 93   RQ1        clam     1       fresh #> 94   RQ1        cort     1       fresh #> 95   RQ1        dper     1       fresh #> 96   RQ1        dper     1       fresh #> 97   RQ1        dper     1      broken #> 98   RQ1        ffau     1      broken #> 99   RQ1        ffau     1      broken #> 100  RQ1        hobv     1       fresh #> 101  RQ1        hobv     1       fresh #> 102  RQ1        ogla     1      broken #> 103  RQ1        ppyg     1       fresh #> 104  RQ1        ppyg     1       fresh #> 105  RQ1        ppyg     1      broken #> 106  RQ1        ppyg     2       fresh #> 107  RQ1        vidi     1       fresh #> 108  RQ1        vidi     1      broken #> 109  RQ1        vidi     1      broken #> 110  RQ1        vidi     1      broken #> 111  RQ2        amin     1       fresh #> 112  RQ2        amin     6       fresh #> 113  RQ2        bbip     1       fresh #> 114  RQ2        bbip     1       fresh #> 115  RQ2        bbip     1      broken #> 116  RQ2        bbip     1      broken #> 117  RQ2        ctri     1       fresh #> 118  RQ2        ctri     1      broken #> 119  RQ2        ctri     2      broken #> 120  RQ2        ctri     3       fresh #> 121  RQ2        dbre     1      broken #> 122  RQ2        dper     1       fresh #> 123  RQ2        dper     1       fresh #> 124  RQ2        dper     1      broken #> 125  RQ2        dper     1      broken #> 126  RQ2        dper     2       fresh #> 127  RQ2        estr     3       fresh #> 128  RQ2        ffau     1       fresh #> 129  RQ2        ffau     1      broken #> 130  RQ2        hobv     9       fresh #> 131  RQ2        mobs     2       fresh #> 132  RQ2        odol     4      broken #> 133  RQ2        odol     9       fresh #> 134  RQ2        ogla     1      broken #> 135  RQ2        ogla     2       fresh #> 136  RQ2        ppyg     9      broken #> 137  RQ2        ppyg    19       fresh #> 138  RQ2        pvic     1      broken #> 139  RQ2        tuni     2       fresh #> 140  RQ2        vcos     2       fresh #> 141  RQ2        vidi     1       fresh #> 142  RQ2        vidi     3       fresh #> 143  RQ2        vidi     3       fresh #> 144  RQ3        aacu     2      broken #> 145  RQ3        amin     2      broken #> 146  RQ3        amin     3       fresh #> 147  RQ3        amin     4       fresh #> 148  RQ3        amin     4      broken #> 149  RQ3        bbip     1      broken #> 150  RQ3        ctri     1       fresh #> 151  RQ3        ctri     2      broken #> 152  RQ3        ctri     7       fresh #> 153  RQ3        dbre     1       fresh #> 154  RQ3        dbre     2       fresh #> 155  RQ3        dper     1       fresh #> 156  RQ3        dper     1      broken #> 157  RQ3        dper     2       fresh #> 158  RQ3        dper     2      broken #> 159  RQ3        eful     1       fresh #> 160  RQ3        eful     1      broken #> 161  RQ3        ffau     1      broken #> 162  RQ3        ffau     1      broken #> 163  RQ3        hobv     1       fresh #> 164  RQ3        hobv     1      broken #> 165  RQ3        mobs     1      broken #> 166  RQ3        ppyg     1       fresh #> 167  RQ3        ppyg     1      broken #> 168  RQ3        ppyg     3       fresh #> 169  RQ3        ppyg     4      broken #> 170  RQ3        pvic     1      broken #> 171  RQ3        vidi     1       fresh #> 172  RQ3        vidi     1      broken #> 173  RQ3        vidi     1      broken #> 174  RQ3        vidi     2      broken #> 175  RQ3        vidi     6       fresh #> 176  RT1        amin     1       fresh #> 177  RT1        amin     3      broken #> 178  RT1        bbip     3      broken #> 179  RT1        ccer     1       fresh #> 180  RT1        ccer     1      broken #> 181  RT1        cort     1      broken #> 182  RT1        dper     1       fresh #> 183  RT1        ffau     2       fresh #> 184  RT1        ffau     5      broken #> 185  RT1        hobv     1       fresh #> 186  RT1        hobv     7      broken #> 187  RT1        iiso     6      broken #> 188  RT1        pinc     1       fresh #> 189  RT1        pinc     2      broken #> 190  RT1        pvic     1       fresh #> 191  RT1        pvic     3      broken #> 192  RT1        tuni     1       fresh #> 193  RT1        tuni     4      broken #> 194  RT2        amin     1      broken #> 195  RT2        apur     2      broken #> 196  RT2        bbip     1       fresh #> 197  RT2        bbip     2      broken #> 198  RT2        bcan     1      broken #> 199  RT2        cort     1      broken #> 200  RT2        ctri     1       fresh #> 201  RT2        dper     1       fresh #> 202  RT2        dper     1       fresh #> 203  RT2        estr     1       fresh #> 204  RT2        estr     3      broken #> 205  RT2        ffau     1       fresh #> 206  RT2        ffau     5      broken #> 207  RT2        ffau     6      broken #> 208  RT2        hobv     1      broken #> 209  RT2        iiso     4      broken #> 210  RT2        iiso     4      broken #> 211  RT2        pinc     1       fresh #> 212  RT2        pinc     1      broken #> 213  RT2        pinc     3      broken #> 214  RT2        pvic     1      broken #> 215  RT2        tuni     1       fresh #> 216  RT2        tuni     2      broken #> 217  RT2        vidi     1       fresh #> 218  RT2        vidi     1      broken #> 219  RT3        amin     1      broken #> 220  RT3        amin     4       fresh #> 221  RT3        apur     1      broken #> 222  RT3        bbip     5       fresh #> 223  RT3        clam     1      broken #> 224  RT3        ffau     1       fresh #> 225  RT3        ffau     2       fresh #> 226  RT3        ffau     3      broken #> 227  RT3        hobv     1       fresh #> 228  RT3        hobv     1      broken #> 229  RT3        hobv     2       fresh #> 230  RT3        iiso     1       fresh #> 231  RT3        pinc     3      broken #> 232  RT3        pvic     1       fresh #> 233  RT3        pvic     2      broken #> 234  RT3        tuni     1      broken #> 235  WQ1        amin     1       fresh #> 236  WQ1        amin     1       fresh #> 237  WQ1        amin     1      broken #> 238  WQ1        bbip     1      broken #> 239  WQ1        bcan     1      broken #> 240  WQ1        cort     1      broken #> 241  WQ1        cort     2      broken #> 242  WQ1        iiso     1       fresh #> 243  WQ1        iiso     1       fresh #> 244  WQ1        pinc     1       fresh #> 245  WQ1        pinc     1       fresh #> 246  WQ1        ppyg     1      broken #> 247  WQ1        ppyg     2      broken #> 248  WQ1        ppyg     4       fresh #> 249  WQ1        ppyg     7       fresh #> 250  WQ1        ppyg    17      broken #> 251  WQ1        pvic     1      broken #> 252  WQ1        vidi     1       fresh #> 253  WQ1        vidi     1       fresh #> 254  WQ1        vidi     1      broken #> 255  WQ1        vidi     1      broken #> 256  WQ2        amin     1       fresh #> 257  WQ2        amin     1      broken #> 258  WQ2        amin     2      broken #> 259  WQ2        bbip     1      broken #> 260  WQ2        ccer     1       fresh #> 261  WQ2        dper     1       fresh #> 262  WQ2        dper     1      broken #> 263  WQ2        dper     2       fresh #> 264  WQ2        dper     4      broken #> 265  WQ2        dper    12       fresh #> 266  WQ2        estr     2      broken #> 267  WQ2        mobs     2      broken #> 268  WQ2        pinc     1       fresh #> 269  WQ2        ppyg     3      broken #> 270  WQ2        ppyg     5       fresh #> 271  WQ2        ppyg    22       fresh #> 272  WQ2        ppyg    26      broken #> 273  WQ2        pvic     1       fresh #> 274  WQ2        tuni     2       fresh #> 275  WQ3        amin     3      broken #> 276  WQ3        amin     7       fresh #> 277  WQ3        bbip     1      broken #> 278  WQ3        bbip     2       fresh #> 279  WQ3        estr     1      broken #> 280  WQ3        ffau     2      broken #> 281  WQ3        pinc     1       fresh #> 282  WQ3        ppyg     2      broken #> 283  WQ3        ppyg     3       fresh #> 284  WQ3        vicr     1       fresh #> 285  WQ3        vidi     1      broken #> 286  WT1        amin     1      broken #> 287  WT1        cort     1       fresh #> 288  WT1        estr     1      broken #> 289  WT1        ffau     1       fresh #> 290  WT1        tuni     1       fresh #> 291  WT2        amin     2       fresh #> 292  WT2        apur     1       fresh #> 293  WT2        bbip     1      broken #> 294  WT2        dper     2       fresh #> 295  WT3        amin     4      broken #> 296  WT3        ffau     1      broken #> 297  WT3        vidi     1       fresh plot(dol)"}]
